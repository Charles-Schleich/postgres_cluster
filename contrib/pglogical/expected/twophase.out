/* First test whether a table's replication set can be properly manipulated */
SELECT * FROM pglogical_regress_variables()
\gset
\c :provider_dsn
SELECT pglogical.replicate_ddl_command($$
	CREATE TABLE public.test2pc_tbl(id serial primary key, value int);
$$);
 replicate_ddl_command 
-----------------------
 t
(1 row)

-- SELECT * FROM pglogical.replication_set_add_all_tables('default', '{public}');
SELECT * FROM pglogical.replication_set_add_table('default', 'test2pc_tbl');
 replication_set_add_table 
---------------------------
 t
(1 row)

SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), 0);
 pg_xlog_wait_remote_apply 
---------------------------
 
(1 row)

-- Check that prapeared state is visible on slave and data available after commit
BEGIN;
INSERT INTO test2pc_tbl VALUES (1, 10);
PREPARE TRANSACTION 'tx1';
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), 0);
 pg_xlog_wait_remote_apply 
---------------------------
 
(1 row)

\c :subscriber_dsn
SELECT gid, owner, database FROM pg_prepared_xacts;
         gid         | owner |      database      
---------------------+-------+--------------------
 tx1                 | stas  | contrib_regression
 test_subscriber:tx1 | stas  | postgres
(2 rows)

SELECT * FROM test2pc_tbl;
 id | value 
----+-------
(0 rows)

\c :provider_dsn
COMMIT PREPARED 'tx1';
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), 0);
 pg_xlog_wait_remote_apply 
---------------------------
 
(1 row)

\c :subscriber_dsn
SELECT gid, owner, database FROM pg_prepared_xacts;
 gid | owner | database 
-----+-------+----------
(0 rows)

SELECT * FROM test2pc_tbl;
 id | value 
----+-------
  1 |    10
(1 row)

-- Check that prapeared state is visible on slave and data is ignored after abort
\c :provider_dsn
BEGIN;
INSERT INTO test2pc_tbl VALUES (2, 20);
PREPARE TRANSACTION 'tx2';
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), 0);
 pg_xlog_wait_remote_apply 
---------------------------
 
(1 row)

\c :subscriber_dsn
SELECT gid, owner, database FROM pg_prepared_xacts;
         gid         | owner |      database      
---------------------+-------+--------------------
 tx2                 | stas  | contrib_regression
 test_subscriber:tx2 | stas  | postgres
(2 rows)

SELECT * FROM test2pc_tbl;
 id | value 
----+-------
  1 |    10
(1 row)

\c :provider_dsn
ROLLBACK PREPARED 'tx2';
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), 0);
 pg_xlog_wait_remote_apply 
---------------------------
 
(1 row)

\c :subscriber_dsn
SELECT gid, owner, database FROM pg_prepared_xacts;
 gid | owner | database 
-----+-------+----------
(0 rows)

SELECT * FROM test2pc_tbl;
 id | value 
----+-------
  1 |    10
(1 row)

-- Clean up
\set VERBOSITY terse
SELECT pglogical.replicate_ddl_command($$
	DROP TABLE public.test2pc_tbl CASCADE;
$$);
 replicate_ddl_command 
-----------------------
 t
(1 row)

