- name: build postgrespro
  shell: ./configure --prefix={{pg_dst}} --without-zlib && make clean && make -j {{makejobs}} && make install
  args:
    chdir: "{{pg_src}}"
    creates: "{{pg_dst}}/bin/postgres"

- name: remove dtm.so
  shell: rm -f {{pg_dst}}/lib/pg_dtm.so

# - name: build dtm extension
#   shell: make clean && make && make install
#   args:
#     chdir: "{{pg_src}}/contrib/pg_dtm"
#     creates: "{{pg_dst}}/lib/pg_dtm.so"

- name: build ts-dtm extension
  shell: make clean && make && make install
  args:
    chdir: "{{pg_src}}/contrib/pg_tsdtm"
    creates: "{{pg_dst}}/lib/pg_dtm.so"

- stat: path={{pg_datadir}}/postmaster.pid
  register: pg_pidfile

- name: stop postgres if it was running
  command: "{{pg_dst}}/bin/pg_ctl stop -w -D {{pg_datadir}}"
  when: pg_pidfile.stat.exists

- name: remove datadirs on datanodes
  command: "rm -rf {{pg_datadir}}"

- name: create datadirs on datanodes
  command: "{{pg_dst}}/bin/initdb {{pg_datadir}}"
  args:
    creates: "{{pg_datadir}}"

- name: configure postgres on datanodes
  lineinfile:
    dest: "{{pg_datadir}}/postgresql.conf"
    line: "{{item.line}}"
    state: present
  with_items: "{{pg_config}}"

- name: configure2 postgres on datanodes
  lineinfile:
    dest: "{{pg_datadir}}/postgresql.conf"
    line: "{{item.line}}"
    state: present
  with_items: "{{pg_config_role}}"

- name: enable dtm extension on datanodes
  lineinfile:
    dest: "{{pg_datadir}}/postgresql.conf"
    regexp: "{{item.regexp}}"
    line: "{{item.line}}"
    state: present
  with_items:
  - line: "dtm.host = '{{pg_dtm_host}}'"
    regexp: "^dtm.host "
  - line: "shared_preload_libraries = 'pg_dtm'"
    regexp: "^shared_preload_libraries "
  when: pg_dtm_enable

- name: enable blind trust on datanodes
  lineinfile:
    dest: "{{pg_datadir}}/pg_hba.conf"
    line: "host all all 0.0.0.0/0 trust"

- include: pg_shard.yml
  when: deploy_pg_shard

- name: start postgrespro
  command: "{{pg_dst}}/bin/pg_ctl start -w -D {{pg_datadir}} -l {{pg_datadir}}/pg.log"

- name: create pg_dtm extension
  command: "{{pg_dst}}/bin/psql -p {{pg_port}} postgres -c 'create extension pg_dtm;'"

