===
xtm
===

Distributed transaction management tools for PostgreSQL.

--------------------
Communication scheme
--------------------

      .- Backend -.
     /             \
    /               \
DTM ---- Backend ---- Coordinator
    \               /
     \             /
      `- Backend -Â´


-----------------------
Coordinator-Backend API
-----------------------

This API includes a set of postgres procedures that
the coordinator can call with "select" statement.

FIXME: document the API

----------
libdtm api
----------

typedef unsigned long long xid_t;

typedef int NodeId;

typedef struct {
    TransactionId* xids;
    NodeId* nodes;
    int nNodes;
} GlobalTransactionId;

// Connects to the specified DTM.
DTMConn DtmConnect(char *host, int port);

// Disconnects from the DTM. Do not use the 'dtm' pointer after this call, or
// bad things will happen.
void DtmDisconnect(DTMConn dtm);

// Creates an entry for a new global transaction. Returns 'true' on success, or
// 'false' otherwise.
bool DtmGlobalStartTransaction(DTMConn dtm, GlobalTransactionId* gtid);

// Asks DTM for a fresh snapshot. Returns 'true' on success, or 'false'
// otherwise.
bool DtmGlobalGetSnapshot(DTMConn dtm, NodeId nodeid, TransactionId xid, Snapshot snapshot);

// Commits transaction only once all participants have called this function,
// does not change CLOG otherwise. Returns 'true' on success, 'false' if
// something failed on the daemon side.
bool DtmGlobalSetTransStatus(DTMConn dtm, NodeId nodeid, TransactionId xid, XidStatus status);

// Gets the status of the transaction identified by 'xid'. Returns the status
// on success, or -1 otherwise. If 'wait' is true, then it does not return
// until the transaction is finished.
XidStatus DtmGlobalGetTransStatus(DTMConn dtm, NodeId nodeid, TransactionId xid, bool wait);

--------------------
Backend-DTM Protocol
--------------------

DTM <--> Backend:

<-   'b'<hex16 self> - "begin"
  -> '+'<hex16 gxid> - "transaction started"
  -> '-'             - "something went wrong"

<-   'c'<hex16 gxid> - "commit"
  -> '+'             - "commit saved"
  -> '-'             - "something went wrong"

<-   'a'<hex16 gxid> - "abort"
  -> '+'             - "abort saved"
  -> '-'             - "something went wrong"

<-   'h'             - "snapshot"
  -> '+'<snapshot>   - "here is a fresh snapshot for you"
  -> '-'             - "something went wrong"

<-   's'<hex16 gxid> - "status"
  -> '+''0|c|a|?'    - "here is the transaction status"
                       (0)unknown, (c)committed, (a)aborted, or (?)inprogress
  -> '-'             - "something went wrong"

<snapshot> = <hex16 xmin><hex16 xmax><hex16 n><hex16 active[n]>
