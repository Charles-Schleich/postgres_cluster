<sect1 id="pg-arman">
  <title>pg_arman</title>
  <sect2 id="pg-arman-name">
    <title>NAME</title>
    <para>
      pg_arman - Backup and recovery manager for PostgreSQL
    </para>
  </sect2>
  <sect2 id="pg-arman-synopsis">
    <title>SYNOPSIS</title>
    <programlisting>
pg_arman [ OPTIONS ]
    { init |
      backup |
      restore |
      show [ DATE | timeline ] |
      validate [ DATE ] |
      delete DATE }
</programlisting>
    <para>
      DATE is the start time of the target backup in ISO-format:
      (YYYY-MM-DD HH:MI:SS). Prefix match is used to compare DATE and
      backup files.
    </para>
  </sect2>
  <sect2 id="pg-arman-description">
    <title>DESCRIPTION</title>
    <para>
      pg_arman is a utility program to backup and restore PostgreSQL
      database.
    </para>
    <para>
      It proposes the following features:
    </para>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Backup while database runs including tablespaces with just one
          command
        </para>
      </listitem>
      <listitem>
        <para>
          Recovery from backup with just one command, with customized
          targets to facilitate the use of PITR.
        </para>
      </listitem>
      <listitem>
        <para>
          Support for full and differential backup + ptrack differential
          backup
        </para>
      </listitem>
      <listitem>
        <para>
          Management of backups with integrated catalog
        </para>
      </listitem>
    </itemizedlist>
  </sect2>
  <sect2 id="pg-arman-commands">
    <title>COMMANDS</title>
    <para>
      pg_arman supports the following commands. See also
      <emphasis role="strong">OPTIONS</emphasis> for more details.
    </para>
    <itemizedlist>
      <listitem>
<literallayout><emphasis role="strong">init</emphasis>:
Initialize a backup catalog.</literallayout>
      </listitem>
      <listitem>
<literallayout><emphasis role="strong">backup</emphasis>:
Take an online backup.</literallayout>
      </listitem>
      <listitem>
<literallayout><emphasis role="strong">restore</emphasis>:
Perform restore.</literallayout>
      </listitem>
      <listitem>
<literallayout><emphasis role="strong">show</emphasis>:
Show backup history. The timeline option shows timeline of the backup and the parent's timeline for each backup.</literallayout>
      </listitem>
      <listitem>
<literallayout><emphasis role="strong">validate</emphasis>:
Validate backup files.</literallayout>
      </listitem>
      <listitem>
<literallayout><emphasis role="strong">delete</emphasis>:
Delete backup files.</literallayout>
      </listitem>
    </itemizedlist>
    <sect3 id="initialization">
      <title>INITIALIZATION</title>
      <para>
        First, you need to create &quot;a backup catalog&quot; to store
        backup files and their metadata. It is recommended to setup
        archive_mode and archive_command in postgresql.conf before
        initializing the backup catalog. If the variables are
        initialized, pg_arman can adjust the config file to the setting.
        In this case, you have to specify the database cluster path for
        PostgreSQL. Please specify it in PGDATA environmental variable
        or -D/--pgdata option.
      </para>
      <programlisting>
$ pg_arman init -B /path/to/backup/
</programlisting>
    </sect3>
    <sect3 id="pg-arman-backup">
      <title>BACKUP</title>
      <para>
        Backup target can be one of the following types:
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            Full backup, backup a whole database cluster.
          </para>
        </listitem>
        <listitem>
          <para>
            Differential backup, backup only files or pages modified
            after the last verified backup. A scan of the WAL records
            since the last backup up to the LSN position of
            pg_start_backup is done and all the blocks touched are
            recorded and tracked as part of the backup. As the WAL
            segments scanned need to be located in the WAL archive, the
            last segment after pg_start_backup has been run needs to be
            forcibly switched.
          </para>
        </listitem>
        <listitem>
          <para>
            ptrack differential backup, use bitmap ptrack file for
            detect changed pages. For use it you need set ptrack_enable
            option to &quot;on&quot;.
          </para>
        </listitem>
      </itemizedlist>
      <para>
        It is recommended to verify backup files as soon as possible
        after backup. Unverified backup cannot be used in restore and in
        differential backups.
      </para>
    </sect3>
    <sect3 id="pg-arman-restore">
      <title>RESTORE</title>
      <para>
        PostgreSQL server should be stopped before performing a restore.
        If database cluster still exists, restore command will save
        unarchived transaction log and delete all database files. You
        can retry recovery until a new backup is taken. After restoring
        files, pg_arman creates recovery.conf in $PGDATA. The conf file
        contains parameters for recovery. It is as well possible to
        modify the file manually.
      </para>
      <para>
        It is recommended to take a full backup as soon as possible
        after recovery has succeeded.
      </para>
      <para>
        If &quot;--recovery-target-timeline&quot; is not specifed, the
        last checkpoint's TimeLineID in control file
        ($PGDATA/global/pg_control) will be the restore target. If
        pg_control is not present, TimeLineID in the full backup used by
        the restore will be a restore target.
      </para>
    </sect3>
    <sect3 id="pg-arman-examples">
      <title>EXAMPLES</title>
      <para>
        To reduce the number of command line arguments, you can set
        BACKUP_PATH, an environment variable, to the absolute path of
        the backup catalog and write default configuration into
        ${BACKUP_PATH}/pg_arman.ini.
      </para>
      <programlisting>
$ cat $BACKUP_PATH/pg_arman.ini
ARCLOG_PATH = /home/postgres/arclog
BACKUP_MODE = FULL
KEEP_DATA_GENERATIONS = 3
KEEP_DATA_DAYS = 120
</programlisting>
    </sect3>
    <sect3 id="pg-arman-take-a-backup">
      <title>TAKE A BACKUP</title>
      <para>
        This example takes a full backup of the whole database. Then, it
        validates all unvalidated backups.
      </para>
      <programlisting>
$ pg_arman backup --backup-mode=full
$ pg_arman validate
</programlisting>
    </sect3>
    <sect3 id="pg-arman-restore-from-a-backup">
      <title>RESTORE FROM A BACKUP</title>
      <para>
        Here are some commands to restore from a backup:
      </para>
      <programlisting>
$ pg_ctl stop -m immediate
$ pg_arman restore
$ pg_ctl start
</programlisting>
    </sect3>
    <sect3 id="pg-arman-show-a-backup">
      <title>SHOW A BACKUP</title>
      <programlisting>
$ pg_arman show
===================================================================================
Start                Mode  Current TLI  Parent TLI  Time    Data   Backup   Status 
===================================================================================
2013-12-25 03:02:31  PAGE            1           0    0m   203kB     67MB   DONE
2013-12-25 03:02:31  PAGE            1           0    0m      0B       0B   ERROR
2013-12-25 03:02:25  FULL            1           0    0m    33MB    364MB   OK
</programlisting>
      <para>
        The fields are:
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            Start: start time of backup
          </para>
        </listitem>
        <listitem>
          <para>
            Mode: Mode of backup: FULL (full) or PAGE (page
            differential) or PTRACK (differential by ptrack)
          </para>
        </listitem>
        <listitem>
          <para>
            Current TLI: current timeline of backup
          </para>
        </listitem>
        <listitem>
          <para>
            Parent TLI: parent timeline of backup
          </para>
        </listitem>
        <listitem>
          <para>
            Time: total time necessary to take this backup
          </para>
        </listitem>
        <listitem>
          <para>
            Data: size of data files
          </para>
        </listitem>
        <listitem>
          <para>
            Log: size of read server log files
          </para>
        </listitem>
        <listitem>
          <para>
            Backup: size of backup (= written size)
          </para>
        </listitem>
        <listitem>
          <para>
            Status: status of backup. Possible values are:
          </para>
          <itemizedlist spacing="compact">
            <listitem>
              <para>
                OK : backup is done and validated.
              </para>
            </listitem>
            <listitem>
              <para>
                DONE : backup is done, but not validated yet.
              </para>
            </listitem>
            <listitem>
              <para>
                RUNNING : backup is running
              </para>
            </listitem>
            <listitem>
              <para>
                DELETING : backup is being deleted.
              </para>
            </listitem>
            <listitem>
              <para>
                DELETED : backup has been deleted.
              </para>
            </listitem>
            <listitem>
              <para>
                ERROR : backup is unavailable because some errors occur
                during backup.
              </para>
            </listitem>
            <listitem>
              <para>
                CORRUPT : backup is unavailable because it is broken.
              </para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
      <para>
        When a date is specified, more details about a backup is
        retrieved:
      </para>
      <programlisting>
$ pg_arman show '2011-11-27 19:15:45'
# configuration
BACKUP_MODE=FULL
# result
TIMELINEID=1
START_LSN=0/08000020
STOP_LSN=0/080000a0
START_TIME='2011-11-27 19:15:45'
END_TIME='2011-11-27 19:19:02'
RECOVERY_XID=1759
RECOVERY_TIME='2011-11-27 19:15:53'
DATA_BYTES=25420184
BLOCK_SIZE=8192
XLOG_BLOCK_SIZE=8192
STATUS=OK
</programlisting>
      <para>
        You can check the &quot;RECOVERY_XID&quot; and
        &quot;RECOVERY_TIME&quot; which are used for restore option
        &quot;--recovery-target-xid&quot;,
        &quot;--recovery-target-time&quot;.
      </para>
      <para>
        The delete command deletes backup files not required by recovery
        after the specified date. This command also cleans up in the WAL
        archive the WAL segments that are no longer needed to restore
        from the remaining backups.
      </para>
    </sect3>
    <sect3 id="pg-arman-options">
      <title>OPTIONS</title>
      <para>
        pg_arman accepts the following command line parameters. Some of
        them can be also specified as environment variables. See also
        <emphasis>PARAMETERS</emphasis> for the details.
      </para>
    </sect3>
    <sect3 id="pg-arman-common-options">
      <title>COMMON OPTIONS</title>
      <para>
        As a general rule, paths for data location need to be specified
        as absolute paths; relative paths are not allowed.
      </para>
<literallayout><emphasis role="strong">-D</emphasis> PATH / <emphasis role="strong">--pgdata</emphasis>=PATH:
 The absolute path of database cluster. Required on backup and restore.</literallayout>
<literallayout><emphasis role="strong">-A</emphasis> PATH / <emphasis role="strong">--arclog-path</emphasis>=PATH:
 The absolute path of archive WAL directory. Required for restore and show command.</literallayout>
<literallayout><emphasis role="strong">-B</emphasis> PATH / <emphasis role="strong">--backup-path</emphasis>=PATH:
 The absolute path of backup catalog. This option is mandatory.</literallayout>
<literallayout><emphasis role="strong">-c</emphasis> / <emphasis role="strong">--check</emphasis>:
 If specifed, pg_arman doesn't perform actual jobs but only checks parameters and required resources. The option is typically used with --verbose option to verify the operation.</literallayout>
    </sect3>
    <sect3 id="pg-arman-backup-options">
      <title>BACKUP OPTIONS</title>
<literallayout><emphasis role="strong">-b</emphasis> BACKUPMODE / <emphasis role="strong">--backup-mode</emphasis>=BACKUPMODE:
 Specify backup target files. Available options are: &quot;full&quot;, &quot;page&quot;, &quot;ptrack&quot;.</literallayout>
<literallayout><emphasis role="strong">-C</emphasis> / <emphasis role="strong">--smooth-checkpoint</emphasis>:
 Checkpoint is performed on every backups. If the option is specified, do smooth checkpoint then. See also the second argument for pg_start_backup().</literallayout>
<literallayout><emphasis role="strong">--validate</emphasis>:
 Validate a backup just after taking it. Other backups taken previously are ignored.</literallayout>
<literallayout><emphasis role="strong">--keep-data-generations</emphasis>=NUMBER / <emphasis role="strong">--keep-data-days</emphasis>=DAYS:
 Specify how long backuped data files will be kept. --keep-data-generations means number of backup generations. --keep-data-days means days to be kept. Only files exceeded one of those settings are deleted.</literallayout>
      <para>
        <emphasis role="strong">-j</emphasis>=NUMBER /
        <emphasis role="strong">--threads</emphasis>=NUMBER: Number of
        threads for backup.
      </para>
      <para>
        <emphasis role="strong">--stream</emphasis>: Enable stream
        replication for save WAL during backup process.
      </para>
      <para>
        <emphasis role="strong">--disable-ptrack-clear</emphasis>:
        Disable clear ptrack files for postgres without ptrack patch.
      </para>
    </sect3>
    <sect3 id="pg-arman-restore-options">
      <title>RESTORE OPTIONS</title>
      <para>
        The parameters whose name start are started with --recovery
        refer to the same parameters as the ones in recovery.confin
        recovery.conf.
      </para>
<literallayout><emphasis role="strong">--recovery-target-timeline</emphasis>=<emphasis>TIMELINE</emphasis>:
 Specifies recovering into a particular timeline. If not specified, the current timeline is used.</literallayout>
<literallayout><emphasis role="strong">--recovery-target-time</emphasis>=TIMESTAMP:
 This parameter specifies the timestamp up to which recovery will proceed.</literallayout>
<literallayout><emphasis role="strong">--recovery-target-xid</emphasis>=XID:
 This parameter specifies the transaction ID up to which recovery will proceed.</literallayout>
<literallayout><emphasis role="strong">--recovery-target-inclusive</emphasis>:
 Specifies whether server pauses when recovery target is reached.</literallayout>
      <para>
        <emphasis role="strong">-j</emphasis>=NUMBER /
        <emphasis role="strong">--threads</emphasis>=NUMBER: Number of
        threads for restore.
      </para>
      <para>
        <emphasis role="strong">--stream</emphasis>: Restore without
        recovery.conf and use pg_xlog WALs. Before you need backup with
        <emphasis role="strong">--stream</emphasis> option. This option
        will disable all <emphasis role="strong">--recovery-</emphasis>
        options.
      </para>
    </sect3>
    <sect3 id="pg-arman-catalog-options">
      <title>CATALOG OPTIONS</title>
<literallayout><emphasis role="strong">-a</emphasis> / <emphasis role="strong">--show-all</emphasis>:
 Show all existing backups, including the deleted ones.</literallayout>
    </sect3>
    <sect3 id="pg-arman-connection-options">
      <title>CONNECTION OPTIONS</title>
      <para>
        Parameters to connect PostgreSQL server.
      </para>
<literallayout><emphasis role="strong">-d</emphasis> DBNAME / <emphasis role="strong">--dbname</emphasis>=DBNAME:
 The database name to execute pg_start_backup() and pg_stop_backup().</literallayout>
<literallayout><emphasis role="strong">-h</emphasis> HOSTNAME / <emphasis role="strong">--host</emphasis>=HOSTNAME:
 Specifies the host name of the machine on which the server is running. If the value begins with a slash, it is used as the directory for the Unix domain socket.</literallayout>
<literallayout><emphasis role="strong">-p</emphasis> PORT / <emphasis role="strong">--port</emphasis>=PORT:
 Specifies the TCP port or local Unix domain socket file extension on which the server is listening for connections.</literallayout>
<literallayout><emphasis role="strong">-U</emphasis> USERNAME / <emphasis role="strong">--username</emphasis>=USERNAME:
 User name to connect as.</literallayout>
<literallayout><emphasis role="strong">-w</emphasis> / <emphasis role="strong">--no-password</emphasis>:
 Never issue a password prompt. If the server requires password authentication and a password is not available by other means such as a .pgpass file, the connection attempt will fail. This option can be useful in batch jobs and scripts where no user is present to enter a password.</literallayout>
<literallayout><emphasis role="strong">-W</emphasis> / <emphasis role="strong">--password</emphasis>:
 Force pg_arman to prompt for a password before connecting to a database. This option is never essential, since pg_arman will automatically prompt for a password if the server demands password authentication. However, pg_arman will waste a connection attempt in order to find out if the server wants a password. In some cases it is worth typing -W to avoid the extra connection attempt.</literallayout>
    </sect3>
    <sect3 id="pg-arman-global-options">
      <title>GLOBAL OPTIONS</title>
<literallayout><emphasis role="strong">--help</emphasis>:
 Print help, then exit.</literallayout>
<literallayout><emphasis role="strong">-V</emphasis> / <emphasis role="strong">--version</emphasis>:
 Print version information, then exit.</literallayout>
<literallayout><emphasis role="strong">-v</emphasis> / <emphasis role="strong">--verbose</emphasis>:
 If specified, pg_arman works in verbose mode.</literallayout>
    </sect3>
  </sect2>
  <sect2 id="pg-arman-parameters">
    <title>PARAMETERS</title>
    <para>
      Some of parameters can be specified as command line arguments,
      environment variables or in configuration file as follows:
    </para>
    <programlisting>
Short   Long                    Env                     File
-h      --host                  PGHOST                  No
-p      --port                  PGPORT                  No
-d      --dbname                PGDATABASE              No
-U      --username              PGUSER                  No
                                PGPASSWORD              No
-w      --password                                      No
-W      --no-password                                   No
-D      --pgdata                PGDATA                  Yes
-B      --backup-path           BACKUP_PATH             Yes
-A      --arclog-path           ARCLOG_PATH             Yes
-b      --backup-mode           BACKUP_MODE             Yes
-C      --smooth-checkpoint     SMOOTH_CHECKPOINT       Yes
        --validate              VALIDATE                Yes
        --keep-data-generations KEEP_DATA_GENERATIONS   Yes
        --keep-data-days        KEEP_DATA_DAYS          Yes
        --recovery-target-timeline RECOVERY_TARGET_TIMELINE Yes
        --recovery-target-xid   RECOVERY_TARGET_XID     Yes
        --recovery-target-time  RECOVERY_TARGET_TIME    Yes
        --recovery-target-inclusive RECOVERY_TARGET_INCLUSIVE Yes
</programlisting>
    <para>
      Variable names in configuration file are the same as long names or
      names of environment variables. The password can not be specified
      in command line and configuration file for security reason.
    </para>
    <para>
      This utility, like most other PostgreSQL utilities, also uses the
      environment variables supported by libpq (see Environment
      Variables).
    </para>
  </sect2>
  <sect2 id="pg-arman-restrictions">
    <title>RESTRICTIONS</title>
    <para>
      pg_arman has the following restrictions.
    </para>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Requires to read database cluster directory and write backup
          catalog directory. It is usually necessary to mount the disk
          where backup catalog is placed with NFS or related from
          database server.
        </para>
      </listitem>
      <listitem>
        <para>
          Major versions of pg_arman and server should match.
        </para>
      </listitem>
      <listitem>
        <para>
          Block sizes of pg_arman and server should match.
        </para>
      </listitem>
      <listitem>
        <para>
          If there are some unreadable files/directories in data folder
          of server WAL directory or archived WAL directory, the backup
          or restore will fail depending on the backup mode selected.
        </para>
      </listitem>
    </itemizedlist>
  </sect2>
  <sect2 id="pg-arman-details">
    <title>DETAILS</title>
    <sect3 id="pg-arman-recovery-to-point-in-time">
      <title>RECOVERY TO POINT-IN-TIME</title>
      <para>
        pg_arman can recover to point-in-time if timeline, transaction
        ID, or timestamp is specified in recovery.conf. xlogdump is a
        contrib module of PostgreSQL core that allows checking in the
        content of WAL files and determine when to recover. This might
        help.
      </para>
    </sect3>
    <sect3 id="pg-arman-configuration-file">
      <title>CONFIGURATION FILE</title>
      <para>
        Setting parameters in configuration file is done as
        &quot;name=value&quot;. Quotes are required if the value
        contains whitespaces. Comments should start with &quot;#&quot;
        and are automatically ignored. Whitespaces and tabs are ignored
        excluding values.
      </para>
    </sect3>
    <sect3 id="pg-arman-restrictions-1">
      <title>RESTRICTIONS</title>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            In order to work, the PostgreSQL instance on which backups
            are taken need to have data checksums enabled or to enable
            wal_log_hints.
          </para>
        </listitem>
        <listitem>
          <para>
            pg_arman is aimed at working with PostgreSQL 9.5 and newer
            versions.
          </para>
        </listitem>
        <listitem>
          <para>
            For ptrack feature you need special version of Postgres and
            set wal_level to archive or hot_standby and ptrack_enable.
          </para>
        </listitem>
        <listitem>
          <para>
            For stream feature you need configure streaming replication
            in your postgres.
          </para>
        </listitem>
      </itemizedlist>
    </sect3>
    <sect3 id="pg-arman-exit-code">
      <title>EXIT CODE</title>
      <para>
        pg_arman returns exit codes for each error status.
      </para>
      <programlisting>
Code    Name                    Description
0       SUCCESS                 Operation succeeded.
1       ERROR                   Generic error
2       FATAL                   Exit because of repeated errors
3       PANIC                   Unknown critical condition
</programlisting>
    </sect3>
  </sect2>
  <sect2 id="pg-arman-author">
    <title>AUTHOR</title>
    <para>
      pg_arman is a fork of pg_arman that was originally written by NTT,
      now developed and maintained by Michael Paquier. Threads, WAL
      diff, ptrack diff, stream WAL and some other features developed by
      Yury Zhuravlev aka stalkerg from PostgresPro.
    </para>
    <para>
      Please report bug reports at
      <ulink url="https://github.com/postgrespro/pg_arman/issues">https://github.com/postgrespro/pg_arman/issues</ulink>.
    </para>
  </sect2>
</sect1>
