<sect1 id="pg-tsparser">
  <title>pg_tsparser</title>
  <para>
    <filename>pg_tsparser</filename> is a <productname>&productname;</productname> extension for text search. 
    This extension modifies the default text parsing strategy for words that include: 
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        underscores
      </para>
    </listitem>
    <listitem>
      <para>
        numbers and letters separated by the hyphen character
      </para>
    </listitem>
  </itemizedlist>
  <para>In addition to separate word parts returned by default, <filename>pg_tsparser</filename> also returns the whole word.</para>
  <sect2 id="pg-tsparser-install">
    <title>Installation and Setup</title>
    <para>
      <filename>pg_tsparser</filename> is included into the <productname>&productname;</productname> 
      distribution. To enable <filename>pg_tsparser</filename>, once 
      <productname>&productname;</productname> is installed,
      create the <filename>pg_tsparser</filename> extension for each
      database you are planning to use:
    </para>
    <programlisting>
CREATE EXTENSION pg_tsparser;
</programlisting>
    <para>
      Once <filename>pg_tsparser</filename> is enabled, you can create
      your own text search configuration. For example:
    </para>
    <programlisting>
CREATE TEXT SEARCH CONFIGURATION english_ts (
    PARSER = tsparser
);

COMMENT ON TEXT SEARCH CONFIGURATION english_ts IS 'text search configuration for english language';

ALTER TEXT SEARCH CONFIGURATION english_ts
    ADD MAPPING FOR email, file, float, host, hword_numpart, int,
    numhword, numword, sfloat, uint, url, url_path, version
    WITH simple;

ALTER TEXT SEARCH CONFIGURATION english_ts
    ADD MAPPING FOR asciiword, asciihword, hword_asciipart,
    word, hword, hword_part
    WITH english_stem;
</programlisting>
  </sect2>
  <sect2 id="pg-tsparser-examples">
    <title>Examples</title>
    <para>
      The following examples illustrate the difference in search results
      returned by <filename>pg_tsparser</filename> and the default parser:
    </para>
    <programlisting>
SELECT to_tsvector('english', 'pg_trgm') as def_parser,
       to_tsvector('english_ts', 'pg_trgm')  as new_parser;
   def_parser    |         new_parser
-----------------+-----------------------------
 'pg':1 'trgm':2 | 'pg':2 'pg_trgm':1 'trgm':3
(1 row)

SELECT to_tsvector('english', '123-abc') as def_parser,
       to_tsvector('english_ts', '123-abc')  as new_parser;
   def_parser    |         new_parser
-----------------+-----------------------------
 '123':1 'abc':2 | '123':2 '123-abc':1 'abc':3
(1 row)

SELECT to_tsvector('english', 'rel-3.2-A') as def_parser,
       to_tsvector('english_ts', 'rel-3.2-A')  as new_parser;
    def_parser    |          new_parser
------------------+-------------------------------
 '-3.2':2 'rel':1 | '3.2':3 'rel':2 'rel-3.2-a':1
(1 row)
</programlisting>
  </sect2>
  <sect2 id="pg-tsparser-authors">
    <title>Authors</title>
    <para>
      Postgres Professional, Moscow, Russia
    </para>
  </sect2>
</sect1>
