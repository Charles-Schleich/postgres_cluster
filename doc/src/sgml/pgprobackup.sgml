<!--
doc/src/sgml/pgprobackup.sgml
&productname; documentation
-->

<refentry id="app-pgprobackup">
 <indexterm zone="app-pgprobackup">
  <primary>pg_probackup</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>pg_probackup</refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>pg_probackup</refname>
  <refpurpose>manage backup and recovery of <productname>&productname;</productname> database clusters</refpurpose>
 </refnamediv>

 <refsynopsisdiv>

  <cmdsynopsis>
   <command>pg_probackup</command>
   <arg choice="plain"><option>init</option></arg>
   <arg choice="plain"><option>-B</option> <replaceable>backupdir</replaceable></arg>
  </cmdsynopsis>
  <cmdsynopsis>
   <command>pg_probackup</command>
   <arg choice="plain"><option>add-instance</option></arg>
   <arg choice="plain"><option>-B</option> <replaceable>backupdir</replaceable></arg>
   <arg choice="plain"><option>-D</option> <replaceable>datadir</replaceable></arg>
   <arg choice="plain"><option>--instance</option> <replaceable>instance_name</replaceable></arg>
  </cmdsynopsis>
  <cmdsynopsis>
   <command>pg_probackup</command>
   <arg choice="plain"><option>del-instance</option></arg>
   <arg choice="plain"><option>-B</option> <replaceable>backupdir</replaceable></arg>
   <arg choice="plain"><option>-D</option> <replaceable>datadir</replaceable></arg>
   <arg choice="plain"><option>--instance</option> <replaceable>instance_name</replaceable></arg>
  </cmdsynopsis>
  <cmdsynopsis>
   <command>pg_probackup</command>
   <arg choice="plain"><option>set-config</option></arg>
   <arg choice="plain"><option>-B</option> <replaceable>backupdir</replaceable></arg>
   <arg choice="plain"><option>--instance</option> <replaceable>instance_name</replaceable></arg>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
  </cmdsynopsis>
  <cmdsynopsis>
   <command>pg_probackup</command>
   <arg choice="plain"><option>show-config</option></arg>
   <arg choice="plain"><option>-B</option> <replaceable>backupdir</replaceable></arg>
   <arg choice="plain"><option>--instance</option> <replaceable>instance_name</replaceable></arg>
  </cmdsynopsis>
  <cmdsynopsis>
   <command>pg_probackup</command>
   <arg choice="plain"><option>backup</option></arg>
   <arg choice="plain"><option>-B</option> <replaceable>backupdir</replaceable></arg>
   <arg choice="plain"><option>--instance</option> <replaceable>instance_name</replaceable></arg>
   <arg choice="plain"><option>-b</option> <replaceable>backup_mode</replaceable></arg>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
  </cmdsynopsis>
  <cmdsynopsis>
   <command>pg_probackup</command>
   <arg choice="plain"><option>restore</option></arg>
   <arg choice="plain"><option>-B</option> <replaceable>backupdir</replaceable></arg>
   <arg choice="plain"><option>--instance</option> <replaceable>instance_name</replaceable></arg>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
  </cmdsynopsis>
  <cmdsynopsis>
   <command>pg_probackup</command>
   <arg choice="plain"><option>validate</option></arg>
   <arg choice="plain"><option>-B</option> <replaceable>backupdir</replaceable></arg>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
  </cmdsynopsis>
  <cmdsynopsis>
   <command>pg_probackup</command>
   <arg choice="plain"><option>show</option></arg>
   <arg choice="plain"><option>-B</option> <replaceable>backupdir</replaceable></arg>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
  </cmdsynopsis>
  <cmdsynopsis>
   <command>pg_probackup</command>
   <arg choice="plain"><option>delete</option></arg>
   <arg choice="plain"><option>-B</option> <replaceable>backupdir</replaceable></arg>
   <arg choice="plain"><option>--instance</option> <replaceable>instance_name</replaceable></arg>
   <group choice="req">
   <arg choice="plain"><option>-i</option> <replaceable>backup_id</replaceable></arg>
   <arg choice="plain"><option>--wal</option></arg>
   <arg choice="plain"><option>--expired</option></arg>
   </group>
  </cmdsynopsis>
  <cmdsynopsis>
   <command>pg_probackup</command>
   <arg choice="plain"><option>archive-push</option></arg>
   <arg choice="plain"><option>-B</option> <replaceable>backupdir</replaceable></arg>
   <arg choice="plain"><option>--instance</option> <replaceable>instance_name</replaceable></arg>
   <arg choice="plain"><option>--wal-file-path</option> <option>%p</option></arg>
   <arg choice="plain"><option>--wal-file-name</option> <option>%f</option></arg>
  </cmdsynopsis>
  <cmdsynopsis>
   <command>pg_probackup</command>
   <arg choice="plain"><option>archive-get</option></arg>
   <arg choice="plain"><option>-B</option> <replaceable>backupdir</replaceable></arg>
   <arg choice="plain"><option>--instance</option> <replaceable>instance_name</replaceable></arg>
   <arg choice="plain"><option>--wal-file-path</option> <option>%p</option></arg>
   <arg choice="plain"><option>--wal-file-name</option> <option>%f</option></arg>
  </cmdsynopsis>
  <cmdsynopsis>
   <command>pg_probackup</command>
   <arg choice="plain"><option>version</option></arg>
  </cmdsynopsis>
  <cmdsynopsis>
   <command>pg_probackup</command>
   <arg choice="plain"><option>help</option></arg>
   <arg choice="opt"><replaceable>command</replaceable></arg>
  </cmdsynopsis>

  </refsynopsisdiv>

 <refsect1>
  <title>
   Description
  </title>
  <para><emphasis role="strong">Table of Contents</emphasis></para>
  <para><link linkend="pg-probackup-install-and-setup">Installation and Setup</link></para>
  <para><link linkend="pg-probackup-reference">Command-Line Reference</link></para>
  <para><link linkend="pg-probackup-usage">Usage</link></para>
  <itemizedlist spacing="compact">
  <listitem>
  <para><link linkend="pg-probackup-creating-backup">Creating Backups</link></para>
  </listitem>
  <listitem>
  <para><link linkend="pg-probackup-validating-backups">Validating Backups</link></para>
  </listitem>
  <listitem>
  <para><link linkend="restoring-a-cluster">Restoring a Cluster</link></para>
  </listitem>
  <listitem>
  <para><link linkend="configuring-pg-probackup">Configuring pg_probackup</link></para>
  </listitem>
  <listitem>
  <para><link linkend="managing-backup-catalog">Managing the Backup Catalog</link></para>
  </listitem>
  </itemizedlist>
  <para>
   <application>pg_probackup</application> is a utility to manage backup and
   recovery of <productname>&productname;</productname> database clusters.
   It is designed to perform periodic backups of the <productname>&productname;</productname> 
   instance that enable you to restore the server in case of a failure.
   <application>pg_probackup</application> supports <productname>&productname;</productname> 9.5 or higher.
  </para>

  <para>
    As compared to other backup solutions,
    <application>pg_probackup</application> offers the following benefits
   that can help you implement different backup strategies and
   deal with large amounts of data:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        Choosing between full and page-level incremental backups to speed up backup and
        recovery
      </para>
    </listitem>
    <listitem>
      <para>
        Implementing a single backup strategy for multi-server
        <productname>&productname;</productname> clusters
      </para>
    </listitem>
    <listitem>
      <para>
        Automatic data consistency checks and on-demand backup
        validation without actual data recovery
      </para>
    </listitem>
    <listitem>
      <para>
        Managing backups in accordance with retention policy
      </para>
    </listitem>
    <listitem>
      <para>
        Running backup, restore, and validation processes on multiple
        parallel threads
      </para>
    </listitem>
    <listitem>
      <para>
        Storing backup data in a compressed state to save disk space
      </para>
    </listitem>
    <listitem>
      <para>
        Taking backups from a standby server to avoid extra load on the master server
      </para>
    </listitem>
    <listitem>
      <para>
        Extended logging settings
      </para>
    </listitem>
    <listitem>
      <para>
        Custom commands to simplify <acronym>WAL</acronym> log archiving
      </para>
    </listitem>
  </itemizedlist>
  <para>
    To manage backup data, <application>pg_probackup</application> creates a
    <firstterm>backup catalog</firstterm>. This directory
    stores all backup files with additional meta information, as
    well as <acronym>WAL</acronym> archives required for <link linkend="continuous-archiving">point-in-time recovery</link>.
    You can store backups for different instances in separate subdirectories of a single backup catalog.
  </para>
  <para>
    Using <application>pg_probackup</application>, you can take
    <emphasis>full</emphasis> or <emphasis>incremental</emphasis> backups:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        Full backups contain all the data files required to restore
        the database cluster from scratch.
      </para>
    </listitem>
    <listitem>
      <para>
        Incremental backups only store the data that has changed since
        the previous backup. It allows to decrease the backup size
        and speed up backup operations.
        <application>pg_probackup</application> supports the following modes of incremental backups:
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            <literal>PAGE</literal> backup. In this mode, <application>pg_probackup</application>
            scans all <acronym>WAL</acronym> files in the archive from the moment the previous
            full or incremental backup was taken. Newly created
            backups contain only the pages that were mentioned in
            <acronym>WAL</acronym> records. This requires all the <acronym>WAL</acronym>
            files since the previous backup to be present in the <acronym>WAL</acronym>
            archive. If the size of these files is comparable
            to the total size of the database cluster files, speedup is
            smaller, but the backup still takes less space.
          </para>
        </listitem>
        <listitem>
          <para>
            <literal>PTRACK</literal> backup. In this mode,
            <productname>&productname;</productname> tracks page changes
            on the fly. Continuous archiving is not necessary for it to
            operate. Each time a relation page is updated, this page is
            marked in a special <literal>PTRACK</literal> bitmap for this relation. As one
            page requires just one bit in the <literal>PTRACK</literal> fork, such bitmaps
             are quite small. Tracking implies some minor overhead on the database
            server operation, but speeds up incremental backups significantly.
          </para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>

  <para>
    Regardless of the chosen backup type, all backups taken with
    <application>pg_probackup</application> support the following archiving strategies:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para><emphasis>Autonomous backups</emphasis> include all
    the files required to restore the cluster to a consistent state at
    the time the backup was taken. Even if continuous archiving is not
    set up, the required <acronym>WAL</acronym> segments are included into the
    backup.
      </para>
    </listitem>
    <listitem>
      <para><emphasis>Archive backups</emphasis> rely on continuous archiving.
    Such backups enable cluster recovery to an arbitrary point after the backup was taken
    (<emphasis>point-in-time recovery</emphasis>).
      </para>
    </listitem>
  </itemizedlist>
  <para><emphasis role="strong">See Also</emphasis></para>
<para><link linkend="pg-probackup-creating-backup">Creating Backups</link></para>

  <refsect2 id="pg-probackup-limitations">
  <title>Limitations</title>
  <para>
    <application>pg_probackup</application> currently has the following limitations:
    <itemizedlist spacing="compact">
    <listitem>
      <para>
        Creating backups from a remote server is currently not supported.
      </para>
    </listitem>

     <listitem>
      <para>
        The server from which the backup was taken and the restored server must be compatible 
        by the <xref linkend="guc-block-size"> and <xref linkend="guc-wal-block-size"> parameters 
        and have the same major release number.
      </para>
     </listitem>

     <listitem>
      <para>
        <productname>Microsoft Windows</productname> operating system is not supported.
      </para>
     </listitem>

     <listitem>
      <para>
        Configuration files outside of <productname>&productname;</productname>
        data directory are not included into the backup and should be backed up separately.
      </para>
     </listitem>

    </itemizedlist>
  </para>
 </refsect2>
</refsect1>

<refsect1 id="pg-probackup-install-and-setup">
  <title>Installation and Setup</title>
  <para>
    The <application>pg_probackup</application> package is provided as part of
    the <productname>&productname;</productname> distribution. Once you have
    <application>pg_probackup</application> installed, complete the following
    setup:
  </para>
  <orderedlist spacing="compact">
    <listitem>
      <para>
        <link linkend="initializing-the-backup-catalog">Initialize the backup catalog</link>.
      </para>
    </listitem>
    <listitem>
      <para>
        <link linkend="adding-new-backup-instance">Add a new backup instance to the backup catalog</link>.
      </para>
    </listitem>
    <listitem>
      <para>
        <link linkend="configuring-database-cluster">Configure the database cluster to enable <application>pg_probackup</application> backups</link>.
      </para>
    </listitem>
  </orderedlist>
  <refsect2 id="initializing-the-backup-catalog">
    <title>Initializing the Backup Catalog</title>
    <para><application>pg_probackup</application> stores all <acronym>WAL</acronym> and backup files 
    in the corresponding subdirectories of the backup catalog.
    </para>
    <para>
      To initialize the backup catalog, run the following command:
    </para>
    <programlisting>
pg_probackup init -B <replaceable>backupdir</replaceable>
</programlisting>
    <para>
      where:
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          <replaceable>backupdir</replaceable> is the backup catalog. If the
          <replaceable>backupdir</replaceable> already exists, it must be
          empty. Otherwise, <application>pg_probackup</application> returns an
          error.
        </para>
      </listitem>
    </itemizedlist>
    </para>
    <para>
      <application>pg_probackup</application> creates the <replaceable>backupdir</replaceable> backup
      catalog, with the following subdirectories:
    </para>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          <literal>wal/</literal> &mdash; directory for <acronym>WAL</acronym>
          files.
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>backups/</literal> &mdash; directory for backup files.
        </para>
      </listitem>
    </itemizedlist>
    <para>Once the backup catalog is initialized, you can <link linkend="adding-new-backup-instance">add a new backup instance</link>.
    </para>
    </refsect2>
    <refsect2 id="adding-new-backup-instance">
    <title>Adding a New Backup Instance</title>
    <para><application>pg_probackup</application> can store backups for multiple database clusters
    in a single backup catalog. To set up the required subdirectories,
    you must add a backup instance to the backup catalog for each database cluster you are 
    going to back up.</para>
    <para>
      To add a new backup instance, run the following command:
    </para>
<programlisting>
pg_probackup add-instance -B <replaceable>backupdir</replaceable> -D <replaceable>datadir</replaceable> --instance <replaceable>instance_name</replaceable>
</programlisting>
    <para>
      where:
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          <replaceable>datadir</replaceable> is the data directory of the
          cluster you are going to back up. To set up and use
          <application>pg_probackup</application>, write access to this
          directory is required.
        </para>
        <para>
          <replaceable>instance_name</replaceable> is the name of the subdirectories
          that will store <acronym>WAL</acronym> and backup files for this cluster.
        </para>
      </listitem>
    </itemizedlist>
    </para>

    <para>
      <application>pg_probackup</application> creates the <replaceable>instance_name</replaceable> subdirectories under the
      <literal>backups/</literal> and <literal>wal/</literal> directories of the backup catalog.
      The <filename>backups/<replaceable>instance_name</replaceable></filename> directory
      contains the <filename>pg_probackup.conf</filename> configuration file that controls backup and restore
      settings for this backup instance.
      For details on how to fine-tune <application>pg_probackup</application> configuration,
      see <xref linkend="configuring-pg-probackup">.
    </para>
      <para>
        The backup catalog must belong to the file
        system of the database server. The user launching
        <application>pg_probackup</application> must have full access to the
        contents of the backup catalog. If you specify the path to the
        backup catalog in the <envar>BACKUP_PATH</envar> environment variable,
        you can omit the corresponding option when running <application>pg_probackup</application>
        commands.
      </para>
    <para>
      Since <application>pg_probackup</application> uses a regular <productname>PostgreSQL</productname>
      connection and the replication protocol,
      <application>pg_probackup</application> commands require
      <link linkend="pg-probackup-connection-opts">connection options</link>. To
      avoid specifying these options each time on the command line, you can set
      them in the <filename>pg_probackup.conf</filename> configuration
      file using the <xref linkend="pg-probackup-set-config"> command.
      For details, see <xref linkend="configuring-pg-probackup">. 
    </para>
  </refsect2>
  <refsect2 id="configuring-database-cluster">
    <title>Configuring the Database Cluster</title>
    <para>
      Although <application>pg_probackup</application> can be used by a superuser,
      it is recommended to create a separate user or role with the minimum 
      permissions required for the chosen backup strategy. In these configuration instructions, the
      <literal>backup</literal> role is used as an example.
    </para>
    <para>To enable backups, the following rigths are required:
    </para>
<programlisting>
CREATE ROLE backup WITH LOGIN;
GRANT USAGE ON SCHEMA pg_catalog TO backup;
GRANT EXECUTE ON FUNCTION current_setting(text) TO backup;
GRANT EXECUTE ON FUNCTION pg_is_in_recovery() TO backup;
GRANT EXECUTE ON FUNCTION pg_start_backup(text, boolean, boolean) TO backup;
GRANT EXECUTE ON FUNCTION pg_stop_backup() TO backup;
GRANT EXECUTE ON FUNCTION pg_stop_backup(boolean) TO backup;
GRANT EXECUTE ON FUNCTION pg_create_restore_point(text) TO backup;
GRANT EXECUTE ON FUNCTION pg_switch_xlog() TO backup;
GRANT EXECUTE ON FUNCTION txid_current() TO backup;
GRANT EXECUTE ON FUNCTION txid_current_snapshot() TO backup;
GRANT EXECUTE ON FUNCTION txid_snapshot_xmax(txid_snapshot) TO backup;
</programlisting>

    <para>Depending on whether you are going to use autonomous or archive backup
        strategies, <productname>&productname;</productname> cluster configuration
        will differ, as specified in the sections below. To back up the database cluster from a standby
        server or create <literal>PTRACK</literal> backups,
        additional setup is required. For details, see <xref linkend="ptrack-backup">
        and <xref linkend="backup-from-standby">.
    </para>

    <refsect3 id="autonomous-backups">
      <title>Setting up Autonomous Backups</title>
      <para>
        To set up the cluster for autonomous backups, complete the
        following steps:
      </para>
      <orderedlist numeration="arabic">
        <listitem>
          <para>
            Grant the <link linkend="role-attributes"><literal>REPLICATION</literal> privilege</link>
            to the <literal>backup</literal> role:
          </para>
          <programlisting>
ALTER ROLE backup WITH REPLICATION;
</programlisting>
        </listitem>
        <listitem>
          <para>
            In the <filename>pg_hba.conf</filename> file, allow
            replication on behalf of the <literal>backup</literal> role.
          </para>
        </listitem>
        <listitem>
          <para>
            Modify the <filename>postgresql.conf</filename> configuration
            file of the <productname>&productname;</productname> server, as follows:
          </para>
          <itemizedlist spacing="compact">
            <listitem>
              <para>
                Make sure the <varname>max_wal_senders</varname>
                parameter is set high enough to leave at least one
                session available for the backup process.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the <varname>wal_level</varname> parameter to be
                <literal>replica</literal> or higher.
              </para>
            </listitem>
          </itemizedlist>
          </listitem>
      </orderedlist>
    </refsect3>
    <refsect3 id="setting-up-archive-backups">
      <title>Setting up Archive Backups</title>
      <para>
        To set up the cluster for archive backups, complete the
        following steps:
      </para>
      <orderedlist spacing="compact">
        <listitem>
          <para>
            Configure the following parameters in
            <filename>postgresql.conf</filename> to enable continuous
            archiving on the <productname>&productname;</productname> server:
          </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            Make sure the <varname>wal_level</varname> parameter is set to
            <literal>replica</literal> or higher.
          </para>
        </listitem>
        <listitem>
          <para>
            Set <literal>archive_mode</literal> to
            <literal>on</literal>.
          </para>
        </listitem>
        <listitem>
          <para>
            Set the <varname>archive_command</varname> variable, as follows:
            <programlisting>
archive_command = 'pg_probackup archive-push -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable> --wal-file-path %p --wal-file-name %f'
</programlisting>
            where <replaceable>backupdir</replaceable> and <replaceable>instance_name</replaceable> refer to the already initialized
            backup catalog instance for this database cluster.
          </para>
        </listitem>
      </itemizedlist>
      </listitem>
      </orderedlist>
    </refsect3>
    <refsect3 id="backup-from-standby">
      <title>Backup from Standby</title>
      <para>
        For <productname>&productname;</productname> 9.6 or higher, <application>pg_probackup</application>
        can take backups from a standby server. This requires the
        following additional setup:
      </para>
      <orderedlist spacing="compact">
        <listitem>
          <para>
            On the standby server, allow replication connections:
          </para>
          <itemizedlist spacing="compact">
            <listitem>
              <para>
                Set the <varname>max_wal_senders</varname> and
                <varname>hot_standby</varname> parameters in
                <filename>postgresql.conf</filename>.
              </para>
            </listitem>
            <listitem>
              <para>
                Configure host-based authentication in
                <filename>pg_hba.conf</filename>.
              </para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>
            On the master server, enable
            <varname>full_page_writes</varname> in
            <filename>postgresql.conf</filename>.
          </para>
        </listitem>
      </orderedlist>
      <note>
        <para>
          Archive backup from the standby server has the following
          limitations:
        </para> 
        <itemizedlist spacing="compact">
          <listitem>
            <para>If the standby is promoted to the master during
          archive backup, the backup fails.
            </para>
          </listitem>
          <listitem>
            <para>All <acronym>WAL</acronym> records required
          for the backup must contain sufficient full-page writes. This
          requires you to enable <varname>full_page_writes</varname> on
          the master, and not to use a tool like
          <application>pg_compresslog</application> as
          <varname>archive_command</varname> to remove full-page writes
          from <acronym>WAL</acronym> files.
            </para>
          </listitem>
        </itemizedlist>
      </note>
    </refsect3>
    <refsect3 id="ptrack-backup">
      <title><literal>PTRACK</literal> Backup</title>
      <para>
        If you are going to use <literal>PTRACK</literal> backups, complete the following
        additional steps:
      </para>
      <orderedlist numeration="arabic" spacing="compact">
        <listitem>
          <para>
            In <filename>postgresql.conf</filename>, set
            <varname>ptrack_enable</varname> to <literal>on</literal>.
          </para>
        </listitem>
        <listitem>
          <para>
            Grant the rights to execute <literal>ptrack</literal>
            functions to the <literal>backup</literal> role:
          </para>
        </listitem>
      </orderedlist>
      <programlisting>
GRANT EXECUTE ON FUNCTION pg_ptrack_clear() TO backup;
GRANT EXECUTE ON FUNCTION pg_ptrack_get_and_clear(oid, oid) TO backup;
</programlisting>
      <para>
        The <literal>backup</literal> role must have access to all the
        databases of the cluster.
      </para>
    </refsect3>
  </refsect2>
</refsect1>

<refsect1 id="pg-probackup-reference">
<title>Command-Line Reference</title>
 <refsect2 id="pg-probackup-commands">
  <title>Commands</title>
    <para>This section describes <application>pg_probackup</application> commands.
    Some commands require mandatory options and can take additional options. For detailed
    descriptions, see <xref linkend="pg-probackup-options">.
    </para>

    <variablelist>

     <varlistentry id="pg-probackup-init">
      <term><option>init</option></term>
      <listitem>
       <para>
         Syntax:
       </para>
<programlisting>
pg_probackup init -B <replaceable>backupdir</replaceable>
</programlisting>
    <para>
     Initializes the <replaceable>backupdir</replaceable> backup catalog that will store
     backup copies, <acronym>WAL</acronym> archive, and meta information for the backed up
     database clusters.
     If the specified <replaceable>backupdir</replaceable> already exists, it must be empty. Otherwise,
     <application>pg_probackup</application> displays a corresponding error message.
      </para>
      </listitem>
     </varlistentry>

     <varlistentry id="pg-probackup-add-instance">
      <term><option>add-instance</option></term>
      <listitem>
       <para>
         Syntax:
       </para>
<programlisting>
pg_probackup add-instance -B <replaceable>backupdir</replaceable> -D <replaceable>datadir</replaceable> --instance <replaceable>instance_name</replaceable>
</programlisting>
        <para>
      Initializes a new backup instance inside the backup catalog <replaceable>backupdir</replaceable> and generates the 
      <filename>pg_probackup.conf</filename> configuration file that
      controls backup and restore settings for the cluster with the specified <replaceable>datadir</replaceable> data directory.
      For details, see <xref linkend="adding-new-backup-instance">.
        </para>
       </listitem>
     </varlistentry>

     <varlistentry id="pg-probackup-del-instance">
      <term><option>del-instance</option></term>
      <listitem>
       <para>
         Syntax:
       </para>
<programlisting>
pg_probackup del-instance -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable>
</programlisting>
        <para>
      Deletes all backup and <acronym>WAL</acronym> files associated with the specified instance.
        </para>
       </listitem>
     </varlistentry>

     <varlistentry id="pg-probackup-set-config">
      <term><option>set-config</option></term>
      <listitem>
       <para>
         Syntax:
       </para>
       <programlisting>
pg_probackup set-config -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable>
[--log-level=<replaceable>log_level</replaceable>] [--log-filename=<replaceable>log_filename</replaceable>]
[--error-log-filename=<replaceable>error_log_filename</replaceable>] [--log-directory=<replaceable>log_directory</replaceable>]
[--log-rotation-size=<replaceable>log_rotation_size</replaceable>] [--log-rotation-age=<replaceable>log_rotation_age</replaceable>]
[-d <replaceable>dbname</replaceable>] [-h <replaceable>host</replaceable>] [-p <replaceable>port</replaceable>] [-U <replaceable>username</replaceable>]
[--master-db=<replaceable>dbname</replaceable>] [--master-host=<replaceable>host</replaceable>]
[--master-port=<replaceable>port</replaceable>] [--master-user=<replaceable>username</replaceable>]
[--retention-redundancy=<replaceable>redundancy</replaceable>][--retention-window=<replaceable>window</replaceable>]
[--replica-timeout=<replaceable>timeout</replaceable>]
</programlisting>
       <para>
       Adds the specified <link linkend="pg-probackup-connection-opts">connection</link>,
       <link linkend="pg-probackup-retention-opts">retention</link>, <link linkend="pg-probackup-logging-opts">logging</link> or
       <link linkend="pg-probackup-replica-opts">replica</link> settings into the <filename>pg_probackup.conf</filename>
       configuration file, or modifies the previously defined values.
       </para>
       </listitem>
     </varlistentry>

     <varlistentry id="pg-probackup-show-config">
      <term><option>show-config</option></term>
      <listitem>
       <para>
         Syntax:
       </para>
       <programlisting>
pg_probackup show-config -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable>
</programlisting>
       <para>
       Displays the contents of the <filename>pg_probackup.conf</filename>
       configuration file located in the <filename><replaceable>backupdir</replaceable>/backups/<replaceable>instance_name</replaceable></filename> directory.
       To edit <filename>pg_probackup.conf</filename>, use the <xref linkend="pg-probackup-set-config"> command.
       It is not allowed to edit <filename>pg_probackup.conf</filename> directly.
       </para>
       </listitem>
     </varlistentry>

     <varlistentry id="pg-probackup-backup">
      <term><option>backup</option></term>
      <listitem>
       <para>
         Syntax:
       </para>
       <programlisting>
pg_probackup backup -B <replaceable>backupdir</replaceable> -b <replaceable>backup_mode</replaceable> --instance <replaceable>instance_name</replaceable>
[-C] [--stream [-S <replaceable>slot_name</replaceable>]] [--backup-pg-log]
[-archive-timeout=<replaceable>timeout</replaceable>] [--delete-expired]
[-d <replaceable>dbname</replaceable>] [-h <replaceable>host</replaceable>] [-p <replaceable>port</replaceable>] [-U <replaceable>username</replaceable>] [-w]
[--master-db=<replaceable>dbname</replaceable>] [--master-host=<replaceable>host</replaceable>]
[--master-port=<replaceable>port</replaceable>] [--master-user=<replaceable>username</replaceable>]
[-j <replaceable>num_threads</replaceable>][--progress] [-q] [-v]
</programlisting>
       <para>
       Creates a backup copy of the <productname>&productname;</productname> instance.
       The <link linkend="pg-probackup-backup-mode"><replaceable>backup_mode</replaceable></link>
       option specifies the backup mode to use. For details, see <xref linkend="pg-probackup-creating-backup">.
       </para>
       </listitem>
     </varlistentry>

     <varlistentry id="pg-probackup-restore">
      <term><option>restore</option></term>
      <listitem>
       <para>
         Syntax:
       </para>
       <programlisting>
pg_probackup restore -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable>
[-D <replaceable>datadir</replaceable>]
[ -i <replaceable>backup_id</replaceable> | [{--time=<replaceable>time</replaceable> | --xid=<replaceable>xid</replaceable> } [--inclusive=<replaceable>boolean</replaceable>]]][--timeline=<replaceable>timeline</replaceable>] [-T <replaceable class="parameter">OLDDIR=NEWDIR</replaceable>]
[-j <replaceable>num_threads</replaceable>] [--progress] [-q] [-v]
</programlisting>
       <para>
       Restores the <productname>&productname;</productname> instance from a backup copy
       located in the <replaceable>backupdir</replaceable> backup catalog.
       If you specify a <link linkend="pg-probackup-recovery-target-opts">recovery target option</link>,
       <application>pg_probackup</application> restores the database cluster up to
       the corresponding recovery target. Otherwise, the most recent backup is used.
       </para>
       </listitem>
     </varlistentry>

     <varlistentry id="pg-probackup-validate">
      <term><option>validate</option></term>
      <listitem>
       <para>
         Syntax:
       </para>
       <programlisting>
pg_probackup validate -B <replaceable>backupdir</replaceable>
[--instance <replaceable>instance_name</replaceable>
[ -i <replaceable>backup_id</replaceable> | [{--time=<replaceable>time</replaceable> | --xid=<replaceable>xid</replaceable> }
[--inclusive=<replaceable>boolean</replaceable>]]]]
[--timeline=<replaceable>timeline</replaceable>]
[-j <replaceable>num_threads</replaceable>] [--progress] [-q] [-v]
</programlisting>
       <para>
       Verifies that all the files required to restore the cluster are present and not corrupted.
       If you specify the <replaceable>instance_name</replaceable> without any additional options,
       <application>pg_probackup</application> validates the most recent backup available in this backup instance.
       If you specify the <replaceable>instance_name</replaceable> with a 
       <link linkend="pg-probackup-recovery-target-opts">recovery target option</link> or a <replaceable>backup_id</replaceable>,
       <application>pg_probackup</application> checks whether it is possible to restore the cluster
       using these options.
       If <replaceable>instance_name</replaceable> is not specified, <application>pg_probackup</application> validates 
       all backups available in the backup catalog.
       </para>
       </listitem>
     </varlistentry>

     <varlistentry id="pg-probackup-show">
      <term><option>show</option></term>
      <listitem>
       <para>
         Syntax:
       </para>
       <programlisting>
pg_probackup show -B <replaceable>backupdir</replaceable>
[--instance <replaceable>instance_name</replaceable> [-i <replaceable>backup_id</replaceable>]]
</programlisting>
       <para>
       Shows the contents of the backup catalog.
       If <replaceable>instance_name</replaceable> and <replaceable>backup_id</replaceable> are specified,
       shows detailed information about this backup.
       </para>
       </listitem>
     </varlistentry>

     <varlistentry id="pg-probackup-delete">
      <term><option>delete</option></term>
      <listitem>
       <para>
         Syntax:
       </para>
       <programlisting>
pg_probackup delete -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable>
{-i <replaceable>backup_id</replaceable> | --wal | --expired}
</programlisting>
       <para>
       Deletes backup or <acronym>WAL</acronym> files of the specified backup instance
       from the <replaceable>backupdir</replaceable> backup catalog:
        <itemizedlist spacing="compact">
          <listitem>
            <para>The <option>-i</option> option removes the specified backup copy.
            </para>
          </listitem>
          <listitem>
            <para>The <option>wal</option> option removes the <acronym>WAL</acronym> files that are no longer required to restore the cluster from any of the existing backups.
            </para>
          </listitem>
          <listitem>
            <para>The <option>expired</option> option removes the backups that are expired according to the current <link linkend="pg-probackup-retention-policy">retention policy</link>.
            </para>
          </listitem>
        </itemizedlist>
       </para>
       </listitem>
     </varlistentry>

     <varlistentry id="pg-probackup-archive-push">
      <term><option>archive-push</option></term>
      <listitem>
       <para>
         Syntax:
       </para>
       <programlisting>
pg_probackup archive-push -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable>
--wal-file-path %p --wal-file-name %f'
</programlisting>
       <para>
      Stores <acronym>WAL</acronym> files in the corresponding subdirectory of the backup catalog.
      Can be set as <varname>archive_command</varname> in <filename>postgresql.conf</filename> to perform
      archive backups. In addition to copying files, this command also validates the instance by
      <replaceable>instance_name</replaceable>, <literal>system-identifier</literal> and <literal>PGDATA</literal>.
      If parameters of the backup instance and the cluster do not match, this command will fail with the following error message:
      <quote>Refuse to push <acronym>WAL</acronym> segment <replaceable>segment_name</replaceable> into archive. Instance parameters mismatch.</quote>
      For each <acronym>WAL</acronym> file moved to the backup catalog, you will see the following message in <productname>&productname;</productname> logfile:
      <quote>pg_probackup archive-push completed successfully</quote>.
       </para>
       </listitem>
     </varlistentry>

     <varlistentry id="pg-probackup-archive-get">
      <term><option>archive-get</option></term>
      <listitem>
       <para>
         Syntax:
       </para>
       <programlisting>
pg_probackup archive-get -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable>
--wal-file-path %p --wal-file-name %f'
</programlisting>
       <para>
      Moves <acronym>WAL</acronym> files from the corresponding subdirectory of the backup catalog to the cluster's xlog location.
      This command is automatically set by <application>pg_probackup</application> as <varname>archive_command</varname> in
      <filename>recovery.conf</filename> when restoring archive backups. You do not need to set it manually.
       </para>
       </listitem>
     </varlistentry>

     <varlistentry id="pg-probackup-version">
      <term><option>version</option></term>
      <listitem>
      <para>
         Syntax:
       </para>
       <programlisting>
pg_probackup version
</programlisting>
       <para>
         Prints <application>pg_probackup</application> version.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="pg-probackup-help">
      <term><option>help</option></term>
      <listitem>
       <para>
         Syntax:
       </para>
       <programlisting>
pg_probackup help [<replaceable>command</replaceable>]
</programlisting>
       <para>
         Displays the synopsis of <application>pg_probackup</application> commands.
         If one of the <application>pg_probackup</application> commands is specified, shows
         detailed information about the options that can be used with this command.
       </para>
       </listitem>
     </varlistentry>
    </variablelist>


 </refsect2>

 <refsect2 id="pg-probackup-options">
  <title>Options</title>

   <para>
     This section describes all command-line options for 
     <application>pg_probackup</application> commands.
     If the option value can be derived from an environment variable,
     this variable is specified below the command-line option, in the uppercase.
     Some values can be taken from the <filename>pg_probackup.conf</filename> 
     configuration file located in the backup catalog. For details, see <xref linkend="configuring-pg-probackup">.
   </para>
   <para>
     If an option is specified using more than one method, command-line input has the highest priority, while the <filename>pg_probackup.conf</filename> settings have the lowest priority.
   </para>

   <refsect3>
    <title>Common Options</title>

    <variablelist>
     <varlistentry id="pg-probackup-backup-dir">
      <term><option>-B <replaceable class="parameter">directory</replaceable></option></term>
      <term><option>--backup-path=<replaceable class="parameter">directory</replaceable></option></term>
      <term><envar>BACKUP_PATH</envar></term>
      <listitem>
       <para>
         Specifies the absolute path to the backup catalog. Backup catalog is a directory where all 
         backup files and meta information is stored. Since this
         option is required for most of the <application>pg_probackup</application> commands,
         you are recommended to specify it once in the <envar>BACKUP_PATH</envar> environment variable. 
         In this case, you do not need to use this option each time on the command line.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="pg-probackup-pgdata-dir">
      <term><option>-D <replaceable class="parameter">directory</replaceable></option></term>
      <term><option>--pgdata=<replaceable class="parameter">directory</replaceable></option></term>
      <term><envar>PGDATA</envar></term>
      <listitem>
       <para>
         Specifies the absolute path to the data directory of the database cluster.
         This option is mandatory only for the <xref linkend="pg-probackup-init"> command. 
         Other commands can take its value from the <envar>PGDATA</envar> 
         environment variable, or from the <filename>pg_probackup.conf</filename> configuration file. 
       </para>
       </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-i <replaceable>backup_id</replaceable></option></term>
      <term><option>-backup-id=<replaceable>backup_id</replaceable></option></term>
      <listitem>
       <para>
         Specifies the unique identifier of the backup.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-j <replaceable class="parameter">num_threads</replaceable></option></term>
      <term><option>--threads=<replaceable class="parameter">num_threads</replaceable></option></term>
      <listitem>
       <para>
         Sets the number of parallel threads for backup, recovery, and backup validation processes.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--progress</option></term>
      <listitem>
       <para>
         Shows the progress of operations.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-q</option></term>
      <term><option>--quiet</option></term>
      <listitem>
       <para>
         Enables the silent mode that does not display any messages about the current process.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-v</option></term>
      <term><option>--verbose</option></term>
      <listitem>
       <para>
         Prints detailed information about the current process.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </refsect3>

   <refsect3>
    <title>Backup Options</title>

    <para>The following options can be used together with the <command>backup</command> command.
    </para>

    <variablelist>
     <varlistentry id="pg-probackup-backup-mode">
      <term><option>-b <replaceable class="parameter">mode</replaceable></option></term>
      <term><option>--backup-mode=<replaceable class="parameter">mode</replaceable></option></term>
      <listitem>
       <para>
         Specifies the backup mode to use. Possible values are: 
         <itemizedlist>
    <listitem>
      <para><literal>FULL</literal> &mdash; creates a full backup that contains all the data files
      of the cluster to be restored.
      </para>
    </listitem>
    <listitem>
      <para><literal>PAGE</literal> &mdash; creates an incremental <literal>PAGE</literal> backup
      based on the <acronym>WAL</acronym> files that have changed since the previous
      full or incremental backup was taken.
      </para>
    </listitem>
    <listitem>
      <para><literal>PTRACK</literal> &mdash; creates an incremental <literal>PTRACK</literal> backup
      tracking page changes on the fly.
      </para>
    </listitem>
         </itemizedlist> 
       For details, see <xref linkend="pg-probackup-creating-backup">.</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-C</option></term>
      <term><option>--smooth-checkpoint</option></term>
      <term><envar>SMOOTH_CHECKPOINT</envar></term>
      <listitem>
       <para>
         Spreads out the checkpoint over a period of time.
         By default, <application>pg_probackup</application> tries to complete the checkpoint as soon as possible.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--stream</option></term>
      <listitem>
       <para>
         Makes an autonomous backup that includes all the necessary <acronym>WAL</acronym> files
         by streaming them from the database server via replication protocol.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-S <replaceable class="parameter">slot_name</replaceable></option></term>
      <term><option>--slot=<replaceable class="parameter">slot_name</replaceable></option></term>
      <listitem>
       <para>
         Specifies the replication slot for <acronym>WAL</acronym> streaming.
         This option can only be used together with the <option>--stream</option> option.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--backup-pg-log</option></term>
      <listitem>
       <para>
         Includes the <filename>pg_log</filename> directory into the backup.
         This directory usually contains log messages. By default, <filename>pg_log</filename> directory is excluded.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--archive-timeout=<replaceable>wait_time</replaceable></option></term>
      <listitem>
       <para>
         Sets the timeout for <acronym>WAL</acronym> segment archiving, in seconds.
         By default, <application>pg_probackup</application> waits 300 seconds.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--delete-expired</option></term>
      <listitem>
       <para>
         After a backup copy is successfully created, deletes backups that are 
         expired according to the current retention policy. 
         You can also clean up the expired backups by running the <command>delete</command> 
         command with the <option>expired</option> option. For details, see
         <xref linkend="pg-probackup-retention-policy">.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </refsect3>

   <refsect3 id="pg-probackup-recovery-target-opts">
    <title>Recovery Target Options</title>
      <para>
        If the archive backup strategy is configured, these options can be used
        together with <command>restore</command> or <command>validate</command> 
        commands to specify the moment up to which the database cluster must be restored.
      </para>

    <variablelist>

     <varlistentry>
      <term><option>--time=<replaceable class="parameter">time</replaceable></option></term>
      <listitem>
       <para>
         Specifies the timestamp up to which recovery will proceed.
         This option cannot be used together with the <option>xid</option> option.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--xid=<replaceable class="parameter">xid</replaceable></option></term>
      <listitem>
       <para>
         Specifies the transaction ID up to which recovery will proceed.
         This option cannot be used together with the <option>time</option> option.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--inclusive=<replaceable class="parameter">boolean</replaceable></option></term>
      <listitem>
       <para>
         Specifies whether to stop just after the specified recovery target (<literal>true</literal>),
         or just before the recovery target (<literal>false</literal>). The default value is taken
         from the <xref linkend="recovery-target-inclusive"> variable.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--timeline=<replaceable class="parameter">timeline</replaceable></option></term>
      <listitem>
       <para>
         Specifies a particular timeline to restore the cluster into. By default,
         the latest available timeline is used.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </refsect3>

   <refsect3>
    <title>Restore Options</title>
      <variablelist>

      <varlistentry id="pg-probackup-tablespace-mapping">
      <term><option>-T <replaceable class="parameter">OLDDIR=NEWDIR</replaceable></option></term>
      <term><option>--tablespace-mapping=<replaceable class="parameter">OLDDIR=NEWDIR</replaceable></option></term>
      <listitem>
       <para>
         Relocates the tablespace from the <replaceable>OLDDIR</replaceable> to the <replaceable>NEWDIR</replaceable> directory
         at the time of recovery. Both <replaceable>OLDDIR</replaceable> and <replaceable>NEWDIR</replaceable> must be absolute paths.
         If the path contains the equals sign (<literal>=</literal>), escape it with a backslash. 
         This option can be specified multiple times for multiple tablespaces.
       </para>
      </listitem>
     </varlistentry>

      </variablelist>
   </refsect3>

   <refsect3>
    <title>Delete Options</title>

    <variablelist>
     <varlistentry>
      <term><option>--wal</option></term>
      <listitem>
       <para>
         Deletes <acronym>WAL</acronym> files that are no longer required 
         to restore the cluster from any of the existing backups.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--expired</option></term>
      <listitem>
       <para>
         Deletes backups that do not conform to the retention policy defined in the
         <filename>pg_probackup.conf</filename> configuration file. For details, see
         <xref linkend="pg-probackup-retention-policy">.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </refsect3>

   <refsect3 id="pg-probackup-retention-opts">
    <title>Retention Options</title>
<para>Retention options can only be used together with the <xref linkend="pg-probackup-set-config"> command. For details, see <xref linkend="pg-probackup-retention-policy">.
</para>
    <variablelist>
     <varlistentry>
      <term><option>--retention-redundancy=<replaceable>redundancy</replaceable></option></term>
      <listitem>
       <para>
         Specifies the number of full backup copies to keep in the data directory.
         Must be a positive integer.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><option>--retention-window=<replaceable>window</replaceable></option></term>
      <listitem>
       <para>
         Number of days of recoverability.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </refsect3>

   <refsect3 id="pg-probackup-logging-opts">
    <title>Logging Options</title>
    <variablelist>
     <varlistentry>
      <term><option>--log-level=<replaceable>log_level</replaceable></option></term>
      <listitem>
       <para>
         Сontrols which message levels are sent to the log.
         Valid values are <literal>VERBOSE</literal>, <literal>LOG</literal>,
         <literal>INFO</literal>, <literal>NOTICE</literal>, <literal>WARNING</literal>,
         <literal>ERROR</literal>, <literal>FATAL</literal>, and <literal>PANIC</literal>.
         The default is <literal>INFO</literal>. Each level includes all the levels that follow it.
         The later the level, the fewer messages are sent.
         Messages of the level >= <literal>ERROR</literal> are always printed to <literal>stderr</literal>.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
   <term><option>--log-filename=<replaceable>log_filename</replaceable></option></term>
      <listitem>
       <para>
        Defines the file names of the created log files. The file names are treated as a
        <literal>strftime</literal> pattern, so you can use %-escapes to specify 
        time-varying file names.
        If <option>log-filename</option> is not set, <application>pg_probackup</application>
        writes all messages to <literal>stderr</literal>.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
   <term><option>--error-log-filename=<replaceable>error_log_filename</replaceable></option></term>
      <listitem>
       <para>
        If you set the <option>log-level</option> parameter to the <literal>ERROR</literal>
        level or higher, defines the file names of the created log files for error
        messages. The file names are treated as a <literal>strftime</literal> pattern, 
        so you can use %-escapes to specify time-varying file names.
        If <option>error-log-filename</option> is not set, <application>pg_probackup</application>
        writes all messages to <literal>stderr</literal>.
       </para>
      </listitem>
     </varlistentry>
 <varlistentry>
   <term><option>--log-directory=<replaceable>log_directory</replaceable></option></term>
      <listitem>
       <para>
      Defines the directory in which log files will be created. You must specify the absolute path.
        This directory is created lazily, when the first log message is written.
        By default, log files are stored in <filename>$BACKUP_PATH/log/</filename>.
       </para>
      </listitem>
     </varlistentry>

 <varlistentry>
   <term><option>--log-rotation-size=<replaceable>log_rotation_size</replaceable></option></term>
      <listitem>
       <para>
     Maximum size of an individual log file, in kilobytes.
       </para>
       <para>
      <application>pg_probackup</application> uses the same rotation rule for both
      <option>logfile</option> and <option>error_logfile</option>.
      Rotation is performed at the start of any <application>pg_probackup</application> command,
      except <option>help</option> and <option>version</option> commands.
      The time of the last log file creation is stored in <filename>$BACKUP_PATH/log/log_rotation</filename>.
    </para>
      </listitem>
     </varlistentry>
     <varlistentry>
   <term><option>--log-rotation-age=<replaceable>log_rotation_age</replaceable></option></term>
      <listitem>
       <para>
     Maximum lifetime of an individual log file, in minutes.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </refsect3>

   <refsect3 id="pg-probackup-connection-opts">
    <title>Connection Options</title>

    <variablelist>
     <varlistentry>
      <term><option>-d <replaceable class="parameter">dbname</replaceable></></term>
      <term><option>--dbname=<replaceable class="parameter">dbname</replaceable></></term>
      <term><envar>PGDATABASE</envar></term>
      <listitem>
      <para>
       Specifies the name of the database to connect to. The connection is used 
       only for managing backup process, so you can connect to any existing database. 
       If this option is not provided on the command line, <envar>PGDATABASE</envar> 
       environment variable, or the <filename>pg_probackup.conf</filename> configuration file, 
       <application>pg_probackup</application> tries to take this value from 
       the <envar>PGUSER</envar> environment variable, or from the current user name if <envar>PGUSER</envar> variable is not set.
      </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-h <replaceable class="parameter">host</replaceable></></term>
      <term><option>--host=<replaceable class="parameter">host</replaceable></></term>
      <term><envar>PGHOST</></term>
      <listitem>
       <para>
        Specifies the host name of the system on which the server is
        running. If the value begins with a slash, it is used as a
        directory for the Unix domain socket.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-p <replaceable class="parameter">port</replaceable></></term>
      <term><option>--port=<replaceable class="parameter">port</replaceable></></term>
      <term><envar>PGPORT</></term>
      <listitem>
       <para>
        Specifies the <acronym>TCP</acronym> port or the local Unix domain socket file
        extension on which the server is listening for connections.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-U <replaceable class="parameter">username</replaceable></></term>
      <term><option>--username=<replaceable class="parameter">username</replaceable></></term>
      <term><envar>PGUSER</></term>
      <listitem>
       <para>
        User name to connect as.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-w</></term>
      <term><option>--no-password</></term>
      <listitem>
       <para>
        Disables a password prompt. If the server requires
        password authentication and a password is not available by
        other means such as a <filename>.pgpass</filename> file, the
        connection attempt will fail. This option can be useful in
        batch jobs and scripts where no user is present to enter a
        password.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    </refsect3>

  <refsect3 id="pg-probackup-replica-opts">
    <title>Replica Options</title>
    <para>
      This section describes the options required to take a backup from replica.
      Connection options are needed to create a restore point (it can only be done at master),
      which will be used to determine <firstterm>recovery time</firstterm> &mdash; the earliest moment
      for which you can restore a consistent state of the database cluster.
    </para>
    <variablelist>
     <varlistentry>
      <term><option>--master-db=<replaceable>dbname</replaceable></></term>
      <listitem>
      <para>
       Specifies the name of the database on the master server to connect to. The connection is used
       only for managing the backup process, so you can connect to any existing database.
       Can be set in the <filename>pg_probackup.conf</filename> using the <command>set-config</command> command.
       Default: <literal>postgres</literal>, the default <productname>&productname;</productname> <literal>dbname</literal>.
      </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><option>--master-host=<replaceable>host</replaceable></></term>
      <listitem>
      <para>
       Specifies the host name of the system on which the master server is running.
      </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><option>--master-port=<replaceable>port</replaceable></></term>
      <listitem>
      <para>
       Specifies the <acronym>TCP</acronym> port or the local Unix domain socket file
       extension on which the master server is listening for connections.
       Default: <literal>5432</literal>, the <productname>&productname;</productname> default port.
      </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><option>--master-user=<replaceable>username</replaceable></></term>
      <listitem>
      <para>
        User name to connect as.
        Default: <literal>postgres</literal>, the <productname>&productname;</productname> default user name.
      </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><option>--replica-timeout=<replaceable>timeout</replaceable></option></term>
      <listitem>
       <para>
         Wait time for <acronym>WAL</acronym> segment streaming via replication, in seconds.
         By default, <application>pg_probackup</application> waits 300 seconds.
         You can also define this parameter in the <filename>pg_probackup.conf</filename>
         configuration file using the <command>set-config</command> command.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    </refsect3>

  <refsect3 id="pg-probackup-archive-opts">
    <title>Archiving Options</title>
    <variablelist>
     <varlistentry>
      <term><option>--wal-file-path=<replaceable>wal_file_path</replaceable> %p</></term>
      <listitem>
      <para>
       Provides the path to the <acronym>WAL</acronym> file in <command>archive_command</command> and <command>restore_command</command>
       used by <application>pg_probackup</application>. The <literal>%p</literal> variable is required for correct processing.
      </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><option>--wal-file-name=<replaceable>wal_file_name</replaceable> %f</></term>
      <listitem>
      <para>
        Provides the name of the <acronym>WAL</acronym> file in <command>archive_command</command> and <command>restore_command</command>
        used by <application>pg_probackup</application>. The <literal>%f</literal> variable is required for correct processing.
      </para>
      </listitem>
     </varlistentry>
    </variablelist>
    </refsect3>
 </refsect2>
 </refsect1>

 <refsect1 id="pg-probackup-usage">
  <title>Usage</title>

  <refsect2 id="pg-probackup-creating-backup">
    <title>Creating a Backup</title>
    <para>To create a backup, run the following command:
    <programlisting>
pg_probackup backup -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable> -b <replaceable>backup_mode</replaceable>
</programlisting>
where <replaceable>backup_mode</replaceable> can take one of the following values:</para>
  <itemizedlist spacing="compact">
    <listitem>
      <para><literal>FULL</literal> &mdash; creates a full backup that contains all the data files
      of the cluster to be restored.
      </para>
    </listitem>
    <listitem>
      <para><literal>PAGE</literal> &mdash; creates an incremental <literal>PAGE</literal> backup
      based on the <acronym>WAL</acronym> files that have changed since the previous
      full or incremental backup was taken.
      </para>
    </listitem>
    <listitem>
      <para><literal>PTRACK</literal> &mdash; creates an incremental <literal>PTRACK</literal> backup
      tracking page changes on the fly.
      </para>
    </listitem>
  </itemizedlist>
<para>When restoring a cluster from an incremental backup, <application>pg_probackup</application>
relies on the previous full backup to restore all the data files first. 
Thus, you must create at least one full backup before taking incremental ones.
</para>
<para>      If you have configured <literal>PTRACK</literal> backups,
            <application>pg_probackup</application> clears <literal>PTRACK</literal>
            bitmap of the relation being processed each time a full or an incremental backup is taken.
            Thus, the next incremental <literal>PTRACK</literal> backup
            contains only the pages that have changed since the previous
            backup. If a backup failed or was interrupted, some relations
            can already have their <literal>PTRACK</literal>
            forks cleared, so the next incremental backup
            will be incomplete. The same is true if <literal>ptrack_enable</literal> was
            turned off for some time. In this case, you must take a full
            backup before the next incremental <literal>PTRACK</literal> backup.
</para>

  <para>
    To make a backup autonomous, add the <option>--stream</option> option to the above command. For example, to create a full autonomous backup, run:
  </para>
    <programlisting>
pg_probackup backup -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable> -b FULL --stream
</programlisting>

   <para>
   Autonomous backups include all the <acronym>WAL</acronym> segments required to restore the
   cluster to a consistent state at the time the backup was taken. To restore a cluster
   from an incremental autonomous backup, <application>pg_probackup</application> still
   requires the full backup and all the incremental backups it depends on.
   </para>

  <para>
    Even if you are using <link linkend="continuous-archiving">continuous archiving</link>,
    autonomous backups can still be useful in the following cases:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        Autonomous backups can be restored on the server that
        has no file access to <acronym>WAL</acronym> archive.
      </para>
    </listitem>
    <listitem>
      <para>
        Autonomous backups enable you to restore the
        cluster state at the point in time for which <acronym>WAL</acronym> files are
        no longer available.
      </para>
    </listitem>
  </itemizedlist>
  </refsect2>

  <refsect2 id="pg-probackup-validating-backups">
  <title>Validating Backups</title>
  <para>
    When checksums are enabled for the database cluster,
    <application>pg_probackup</application> uses this information to check
    correctness of data files. While reading each page,
    <application>pg_probackup</application> checks whether the calculated
    checksum coincides with the checksum stored in the page. This
    guarantees that the backup is free of corrupted pages. Note that
    <application>pg_probackup</application> reads database files from disk and
    under heavy write load during backup it can show false positive
    checksum failures because of partial writes.
  </para>
  <para>
    Even if page checksums are disabled,
    <application>pg_probackup</application> calculates checksums for each file
    in a backup. Checksums are checked immediately after backup is taken
    and right before restore, to detect possible backup corruptions.
  </para>
  <para>
    To ensure that all the required backup files are present and can be used to restore
    the database cluster, you can run the <option>validate</option> command with the exact
    <link linkend="pg-probackup-recovery-target-opts">recovery target</link> options
    you are going to use for recovery. If you omit all the parameters, all backups are
    validated.
  </para>
  <para>For example, to check that you can restore the
    database cluster from a backup copy up to the specified
    <replaceable>xid</replaceable> transaction ID, run this command:
  </para>
  <programlisting>
pg_probackup validate -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable> --xid=<replaceable>xid</replaceable>
</programlisting>
  <para>
    If validation completes successfully,
    <application>pg_probackup</application> displays the corresponding message.
    If validation fails, you will receive an error message with the
    exact time and transaction ID up to which the recovery is possible.
  </para>
</refsect2>

<refsect2 id="restoring-a-cluster">
  <title>Restoring a Cluster</title>
  <para>
    To restore the database cluster from a backup, use the <literal>restore</literal> command:
  </para>
  <programlisting>
pg_probackup restore -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable> -D <replaceable>datadir</replaceable> -i <replaceable>backup_id</replaceable>
</programlisting>
  <para>
    where:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <replaceable>datadir</replaceable> specifies the location of the
        restored data directory of the cluster. If you omit the
        <literal>-D</literal> option, the <replaceable>datadir</replaceable> value is taken from
        the <filename>pg_probackup.conf</filename> configuration file, so
        the cluster will be restored in its original location.
      </para>
    </listitem>
    <listitem>
      <para>
        <replaceable>backup_id</replaceable> specifies the backup to restore the
        cluster from. If you omit this option,
        <application>pg_probackup</application> uses the latest
        backup available for the specified instance.
      </para>
    </listitem>
  </itemizedlist>
  <note>
   <para>
     If you specify an incremental backup to restore,
     <application>pg_probackup</application> automatically restores the underlying full backup and
     then sequentially applies all the necessary increments.
   </para>
  </note>
  <para>
    If you have configured archive backups, you can restore the cluster
    to its state at an arbitrary point in time (<emphasis>recovery
    target</emphasis>) using
    <link linkend="pg-probackup-recovery-target-opts">recovery target
    options</link>. <application>pg_probackup</application> automatically
    chooses the backup that is the closest to the specified recovery
    target and start the recovery process. By default, the
    <xref linkend="recovery-target-inclusive"> parameter defines whether the recovery
    target is included into the backup. You can explicitly include or
    exclude the recovery target using the
    <option>--inclusive=<replaceable>boolean</replaceable></option> option.
  </para>
  <para>
    To restore the cluster state at the exact time, specify the
    <option>time</option> option, in the <literal>timestamp</literal>
    format. For example:
  </para>
  <programlisting>
pg_probackup restore -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable> --time='2017-05-18 14:18:11'
</programlisting>
  <para>
    To restore the cluster state up to a specific transaction ID, use the <option>xid</option>:
  </para>
  <programlisting>
pg_probackup restore -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable> --xid=687
</programlisting>
  <para>
    If the cluster to restore contains tablespaces,
    <application>pg_probackup</application> restores them to their original
    location by default. To restore tablespaces to a different location, use the
    <link linkend="pg-probackup-tablespace-mapping"><literal>--tablespace-mapping</literal></link> option. 
    Otherwise, restoring the cluster on the same host will fail if tablespaces are in use, because the backup
    would have to be written to the same directories.
    </para>
    <para>When using the <option>--tablespace-mapping</option> you must 
    provide absolute paths to the old and new tablespace directories. 
    If a path happens to contain an equals sign (<literal>=</literal>), escape it with a
    backslash. This option can be specified multiple times for multiple
    tablespaces. For example:
  </para>
  <programlisting>
pg_probackup restore -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable> -D <replaceable>datadir</replaceable> -j 4 -i <replaceable>backup_id</replaceable> -T <replaceable>tablespace1_dir</replaceable>=<replaceable>tablespace1_newdir</replaceable> -T <replaceable>tablespace2_dir</replaceable>=<replaceable>tablespace2_newdir</replaceable>
</programlisting>
  <para>
    Once the <literal>restore</literal> command is complete, start the
    database service. <productname>&productname;</productname> will restore a self-consistent
    state by replaying <acronym>WAL</acronym> files and will be ready to accept
    connections.
  </para>
</refsect2>

  <refsect2>
   <title>Running pg_probackup on Parallel Threads</title>

   <para>
     Backup, recovery, and validation processes can be executed on several parallel threads.
     This can significantly speed up <application>pg_probackup</application> operation
     given enough resources (<acronym>CPU</acronym> cores, disk, and network throughput).
   </para>

   <para>
     Parallel execution is controlled by the <option>-j</option>/<option>--threads</option>
     command line option. For example, to create a backup using four parallel threads, run:
     <programlisting>
pg_probackup backup -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable> -b FULL -j 4
</programlisting>
   </para>

   <note>
   <para>
     Parallel recovery applies only to copying data from the backup catalog
     to the data directory of the cluster. When <productname>&productname;</productname> 
     server is started, <acronym>WAL</acronym> records need to be replayed, and this cannot be done in parallel.
   </para>
   </note>
  </refsect2>
</refsect1>

  <refsect1 id="configuring-pg-probackup">
  <title>Configuring pg_probackup</title>
  <para>Once the backup catalog is initialized and a new backup instance is added,
  you can use the <filename>pg_probackup.conf</filename> configuration file located
  in the <filename>backups/<replaceable>instance_name</replaceable></filename> directory
  to fine-tune <application>pg_probackup</application> configuration.
  </para>
  <para>
    Initially, <filename>pg_probackup.conf</filename> contains the following settings:
    </para>
    <itemizedlist spacing="compact">
        <listitem>
        <para>
          <literal>PGDATA</literal> &mdash; the path to the data directory of
          the cluster to back up.
        </para>
        </listitem>

          <listitem>
            <para>
              <literal>system-identifier</literal> &mdash; the unique
              identifier of the
              <productname>&productname;</productname> instance.
            </para>
          </listitem>
    </itemizedlist>
    <para>
    Additionally, you can define
  <link linkend="pg-probackup-connection-opts">connection</link>,
  <link linkend="pg-probackup-retention-opts">retention</link>,
  <link linkend="pg-probackup-logging-opts">logging</link>, and
  <link linkend="pg-probackup-replica-opts">replica</link> settings using the
  <xref linkend="pg-probackup-set-config"> command:</para>
<programlisting>
pg_probackup set-config -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable> [<replaceable>connection_options</replaceable>] [<replaceable>retention_options</replaceable>] [<replaceable>logging_options</replaceable>] [<replaceable>replica_options</replaceable>]
</programlisting>

  <para>
    To view the current settings, run the following command:
  </para>
  <programlisting>
pg_probackup show-config -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable>
</programlisting>
  <refsect2>

  <title>Specifying Connection Settings</title>
  <para>
   If you define connection settings in the <filename>pg_probackup.conf</filename> configuration file, you can omit connection options in all the subsequent <application>pg_probackup</application> commands. However, if the corresponding environment variables are set, they get higher priority. The options provided on the command line overwrite both environment variables and configuration file settings.
  </para>
   <para>
   If nothing is given, the default values are taken. <application>pg_probackup</application>
     tries to use local connection and tries to get the database name and the user name from the <envar>PGUSER</envar> environment variable or the current <acronym>OS</acronym> user name.
   </para>
  </refsect2>
  <refsect2 id="pg-probackup-retention-policy">
   <title>Configuring Backup Retention Policy</title>
   <para>
    By default, all backup copies created with
    <application>pg_probackup</application> are stored in the specified backup
    catalog. To save disk space, you can configure retention policy
    and periodically clean up redundant backup copies accordingly.
  </para>
  <para>
    To configure retention policy, set one or more of the following
    variables in the <filename>pg_probackup.conf</filename> file:</para>
    <itemizedlist spacing="compact">
    <listitem><para>
    <option>retention-redundancy</option> &mdash; specifies the number of full backup
    copies to keep in the backup catalog.</para>
    </listitem>
    <listitem><para><option>retention-window</option> &mdash; defines the earliest point in time for which <application>pg_probackup</application> can complete the recovery. This option is set in the number of days from the current moment. For example, if <option>retention-window</option>=7, <application>pg_probackup</application> must keep at least one full backup copy that is older than seven days, with all the corresponding <acronym>WAL</acronym> files.</para></listitem>
    </itemizedlist>
    <para>If both <option>retention-redundancy</option> and <option>retention-window</option>
    options are set, <application>pg_probackup</application> keeps backup copies
    that satisfy both conditions. For example, if you set <option>retention-redundancy</option>=2 and <option>retention-window</option>=7, <application>pg_probackup</application> cleans up the backup directory to keep only two full backup copies if at least one of them is older than seven days.
    </para>
  <para>
    To clean up the backup catalog in accordance with retention policy, run:
  </para>
  <programlisting>
pg_probackup delete -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable> --expired
</programlisting>
  <para>
    <application>pg_probackup</application> deletes all backup copies
    that do not conform to the defined retention policy.
    </para>
    <para>
    Alternatively, you can configure backup retention policy
    and use the <literal>--delete-expired</literal>
    option together with the <literal>backup</literal> command to
    remove the outdated backup copies once the new backup is created.</para>
  </refsect2>
  </refsect1>

<refsect1 id="managing-backup-catalog">
  <title>Managing the Backup Catalog</title>
  <para>
    With <application>pg_probackup</application>, you can manage
    backups from the command line:
  </para>
    <itemizedlist>
      <listitem>
        <para><link linkend="viewing-backup-info">View available backups</link>
        </para>
      </listitem>
      <listitem>
        <para><link linkend="pg-probackup-deleting-backups">Delete backups</link>
        </para>
      </listitem>
    </itemizedlist>

  <refsect2 id="viewing-backup-info">
    <title>Viewing Backup Information</title>
    <para>
      To view the list of existing backups, run the command:
    </para>
    <programlisting>
pg_probackup show -B <replaceable>backupdir</replaceable>
</programlisting>

<para>
 <application>pg_probackup</application> displays the list of all the available backups.
 You will see the following output:
</para>
<programlisting>
BACKUP INSTANCE 'two'
===============================================================================================================================
 Instance    ID      Recovery time        Mode    WAL      Current/Parent TLI    Time    Data    Start LSN    Stop LSN   Status
===============================================================================================================================
 two         ORHG08  2017-06-13 14:02:33  FULL    STREAM     1 / 0                 9s    55MB   0/5000028    0/50001B8   OK

BACKUP INSTANCE 'one'
===============================================================================================================================
 Instance    ID      Recovery time        Mode    WAL      Current/Parent TLI    Time    Data    Start LSN    Stop LSN   Status
===============================================================================================================================
 one         ORHFY4  2017-06-13 14:01:18  FULL    ARCHIVE    1 / 0                 3s    22MB   0/2000028    0/30000C8   OK
===============================================================================================================================
</programlisting>

    <para>
     For each backup, the following information is provided:
    </para>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Instance &mdash; the instance name.
        </para>
      </listitem>
      <listitem>
        <para>ID &mdash; the backup identifier.
        </para>
      </listitem>
      <listitem>
        <para>Recovery time &mdash; the
      earliest moment for which you can restore the state of the
      database cluster.
        </para>
      </listitem>
      <listitem>
        <para>Mode &mdash; the method used to take this backup.
      Possible values: <literal>FULL</literal>, <literal>PAGE</literal>,
      <literal>PTRACK</literal>.
        </para>
      </listitem>
      <listitem>
        <para><acronym>WAL</acronym> &mdash; the way of <acronym>WAL</acronym> log handling.
      Possible values: <literal>STREAM</literal> for autonomous backups
      and <literal>ARCHIVE</literal> for archive backups.
        </para>
      </listitem>
      <listitem>
        <para>Current/Parent <acronym>TLI</acronym> &mdash; current and parent timelines of the database
      cluster.
        </para>
      </listitem>
      <listitem>
        <para>Time &mdash; the time it took to perform the backup.
        </para>
      </listitem>
      <listitem>
        <para>Data &mdash;
      the size of the data files in this backup. This value does not
      include the size of <acronym>WAL</acronym> files.
        </para>
      </listitem>
      <listitem>
        <para>Start <acronym>LSN</acronym> &mdash; <acronym>WAL</acronym> log sequence
      number corresponding to the start of the backup process. 
        </para>
      </listitem>
      <listitem>
        <para>Stop <acronym>LSN</acronym> &mdash; <acronym>WAL</acronym> log sequence
      number corresponding to the end of the backup process. 
        </para>
      </listitem>
      <listitem>
        <para> Status &mdash; backup status.
         Possible values:
         <itemizedlist spacing="compact">
         <listitem>
         <para>
         <literal>OK</literal> &mdash; the backup is complete and valid.</para></listitem>
         <listitem><para><literal>CORRUPT</literal> &mdash; some of the backup files are corrupted.</para></listitem>
         <listitem><para><literal>DONE</literal> &mdash; the backup is complete, but was not validated.</para></listitem>
         <listitem><para><literal>ERROR</literal> &mdash; the backup was aborted because of an unexpected error.</para></listitem>
         <listitem><para><literal>RUNNING</literal> &mdash; the backup is in progress.</para></listitem>
         <listitem><para><literal>DELETING</literal> &mdash; the backup files are being deleted.</para></listitem>
         </itemizedlist>
         You can restore the cluster from the backup only if the backup status is <literal>OK</literal>.
        </para>
      </listitem>
    </itemizedlist>
    <para>
      To get more detailed information about the backup, run the <command>show</command> with the backup ID:
    </para>
    <programlisting>
pg_probackup show -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable> -i <replaceable>backup_id</replaceable>
</programlisting>
    <para>
      The sample output is as follows:
    </para>
    <programlisting>
#Configuration
backup-mode = FULL
stream = false

#Compatibility
block-size = 8192
xlog-block-size = 8192
checksum-version = 0

#Result backup info
timelineid = 1
start-lsn = 0/04000028
stop-lsn = 0/040000f8
start-time = '2017-05-16 12:57:29'
end-time = '2017-05-16 12:57:31'
recovery-xid = 597
recovery-time = '2017-05-16 12:57:31'
data-bytes = 22288792
status = OK
</programlisting>
  </refsect2>

  <refsect2 id="pg-probackup-deleting-backups">
    <title>Deleting Backups</title>
    <para>
      To delete a backup that is no longer required, run the following
      command:
    </para>
    <programlisting>
pg_probackup delete -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable> -i <replaceable>backup_id</replaceable>
</programlisting>
    <para>
      This command will delete the backup with the specified
      <replaceable>backup_id</replaceable>, together with all the incremental backups
      that followed, if any. This way, you can delete
      some recent incremental backups, retaining the underlying full
      backup and some of the incremental backups that follow it.
    </para>
    <note>
      <para>
      In this case, the next <literal>PTRACK</literal> backup will be incomplete as some
      changes since the last retained backup will be lost. Either a full
      backup or an incremental <literal>PAGE</literal> backup
      (if all the necessary <acronym>WAL</acronym>
      files are still present in the archive) must be taken then.
      </para>
    </note>
    <para>
      To delete obsolete <acronym>WAL</acronym> files that are not necessary to restore any
      of the remaining backups, use the <literal>--wal</literal> option:
    </para>
    <programlisting>
pg_probackup delete -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable> --wal
</programlisting>
    <para>
      To delete backups that are expired according to the current
      <link linkend="pg-probackup-retention-policy">retention policy</link>, use the
      <literal>--expired</literal> option:
    </para>
    <programlisting>
pg_probackup delete -B <replaceable>backupdir</replaceable> --instance <replaceable>instance_name</replaceable> --expired
</programlisting>
  </refsect2>
</refsect1>

 <refsect1>
  <title>Authors</title>

  <para>
   Postgres Professional, Moscow, Russia.
  </para>

 <refsect2>
  <title>Credits</title>
  <para>
    <application>pg_probackup</application> utility is based on <application>pg_arman</application>,
    that was originally written by NTT and then developed and maintained by Michael Paquier.
  </para>
  </refsect2>

 </refsect1>


</refentry>
