<!-- doc/src/xml/hunspell-dict.xml -->

<sect1 id="hunspell-dict" xreflabel="Hunspell Dictionaries Modules">
 <title>Модули словарей <application>Hunspell</application></title>

 <indexterm zone="hunspell-dict"><primary>Словари Hunspell</primary></indexterm>

 <para>Эти модули предоставляют словари <application>Hunspell</application> для разных языков. После установки модуля в базу командой <command>CREATE EXTENSION</command> в схеме public появляются объекты конфигурации и словаря текстового поиска.</para>

 <table id="hunspell-dict-table">
  <title>Модули</title>
  <tgroup cols="4">
   <thead>
     <row>
      <entry>Язык</entry>
      <entry>Имя расширения</entry>
      <entry>Имя словаря</entry>
      <entry>Имя конфигурации</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry>Американский английский</entry>
      <entry><filename>hunspell_en_us</filename></entry>
      <entry><literal>english_hunspell</literal></entry>
      <entry><literal>english_hunspell</literal></entry>
     </row>
     <row>
      <entry>Нидерландский</entry>
      <entry><filename>hunspell_nl_nl</filename></entry>
      <entry><literal>dutch_hunspell</literal></entry>
      <entry><literal>dutch_hunspell</literal></entry>
     </row>
     <row>
      <entry>Французский</entry>
      <entry><filename>hunspell_fr</filename></entry>
      <entry><literal>french_hunspell</literal></entry>
      <entry><literal>french_hunspell</literal></entry>
     </row>
     <row>
      <entry>Русский</entry>
      <entry><filename>hunspell_ru_ru</filename></entry>
      <entry><literal>russian_hunspell</literal></entry>
      <entry><literal>russian_hunspell</literal></entry>
     </row>
    </tbody>
  </tgroup>
 </table>

 <sect2>
  <title>Примеры</title>

  <para>Объекты текстового поиска будут созданы после установки модуля словаря. Мы можем проверить созданную конфигурацию: <programlisting>SELECT * FROM ts_debug('english_hunspell', 'abilities');
   alias   |   description   |   token   |          dictionaries           |    dictionary    |  lexemes  
-----------+-----------------+-----------+---------------------------------+------------------+-----------
 asciiword | Word, all ASCII | abilities | {english_hunspell,english_stem} | english_hunspell | {ability}
(1 row)</programlisting></para>

  <para>Либо вы можете создать собственную конфигурацию текстового поиска. Например, с созданными словарями и словарём <literal>Snowball</literal> вы можете получить смешанную русско-английскую конфигурацию: <programlisting>CREATE TEXT SEARCH CONFIGURATION russian_en (
  COPY = simple
);

ALTER TEXT SEARCH CONFIGURATION russian_en
  ALTER MAPPING FOR asciiword, asciihword, hword_asciipart
  WITH english_hunspell, english_stem;

ALTER TEXT SEARCH CONFIGURATION russian_en
  ALTER MAPPING FOR word, hword, hword_part
  WITH russian_hunspell, russian_stem;</programlisting></para>

  <para>Создавать смешанные словари можно только для языков с различными алфавитами. Если у двух языков похожие алфавиты, <productname>Postgres Pro</productname> не сможет определить, какой словарь нужно использовать.</para>

  <para>Конфигурация текстового поиска, которая создаётся, когда модуль словаря готов к применению. Например, можно искать определённые слова в этом тексте: <programlisting>SELECT to_tsvector('english_hunspell', 'The blue whale is the largest animal');
               to_tsvector               
-----------------------------------------
 'animal':7 'blue':2 'large':6 'whale':3
(1 row)</programlisting></para>

  <para>Поисковый запрос может выглядеть так: <programlisting>SELECT to_tsvector('english_hunspell', 'The blue whale is the largest animal')
  @@ to_tsquery('english_hunspell', 'large &amp; whale');
 ?column? 
----------
 t
(1 row)</programlisting></para>

  <para>С такими конфигурациями можно искать текст, применяя индексы GIN или GIST. Например, если существует таблица с индексом GIN: <programlisting>CREATE TABLE table1 (t varchar);
INSERT INTO table1 VALUES ('The blue whale is the largest animal');
CREATE INDEX t_idx ON table1 USING GIN (to_tsvector('english_hunspell', "t"));</programlisting></para>

  <para>Для неё можно выполнить следующий запрос: <programlisting>SELECT * FROM table1 where to_tsvector('english_hunspell', t)
  @@ to_tsquery('english_hunspell', 'blue &amp; animal');
                  t                   
--------------------------------------
 The blue whale is the largest animal
(1 row)</programlisting></para>
 </sect2>

</sect1>
